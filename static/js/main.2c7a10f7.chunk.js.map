{"version":3,"sources":["Controller/LoginStatus.tsx","Controller/SessionInfo.tsx","Controller/Tasks/task_utils.tsx","SenseAnnot/sessionUtils/sessionReducer.ts","SenseAnnot/sessionUtils/sessionHandler.ts","SenseAnnot/annot_uploader.ts","Controller/Tasks/AssignmentList.tsx","Controller/Tasks/NavigationBar.tsx","Controller/Tasks/Tasks.tsx","Controller/Controller.tsx","SentenceViewer/Token.tsx","DataHandler/login.ts","DataHandler/getData.ts","SentenceViewer/FullTextModal.tsx","SentenceViewer/SentenceViewer.tsx","SenseSorter/tree_utils.ts","SenseSorter/sorter_utils.ts","SenseSorter/sorter_updater.ts","SenseSorter/SenseItem.tsx","SenseSorter/SenseList.tsx","SenseSorter/GroupInfoEdit.tsx","SenseSorter/SenseTreeGroupHeader.tsx","SenseSorter/ResetSenseTreeDialog.tsx","SenseSorter/SenseTreeView.tsx","SenseSorter/SensePicker.tsx","SenseSorter/sense_sorter_options.ts","SenseSorter/RevisionView.tsx","SenseSorter/SenseSorter.tsx","SenseSorter/sorter_uploader.ts","SenseAnnot/annot_updater.ts","SenseAnnot/SenseAnnot.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginStatus","props","linkStyle","root","color","fontSize","textDecoration","user","Stack","horizontal","name","style","paddingLeft","Link","styles","onClick","logout_fn","login_fn","SessionInfo","session","sess","last_time","Date","lastActivity","toLocaleString","id","populate_task_items","currentAssignId","assignments","annotations","map","x","assign_id","assignId","nTotal","items","length","nDone","nAmbig","nExcl","Object","values","results","reduce","obj","status","probs","summarise_progress","checked","SessionActionType","SessionMapper","this","stepTrial","stepTodo","stepAmbig","hasAssignments","gotoAssignment","newAssignId","assig","findAssignment","cloneSession","err","console","error","itemNo","newSession","currentAssignmentId","itemId","stepFunc","findItemNo","currentItemId","newItemId","curItemId","dones","keys","todos","filter","indexOf","cursor","ambigs","rev","curAssigs","Error","assignment","undefined","curItemSerial","assign","currentItemNo","now","useSession","useReducer","action","type","Update","payload","handler","Init","initializeSession","GotoAssignment","GotoItemNo","gotoItemNo","newItemNo","NextTrial","nextTrial","PrevTrial","prevTrial","NextTodo","nextTodo","PrevTodo","prevTodo","NextAmbig","nextAmbiguous","PrevAmbig","prevAmbiguous","mapSession","dispatch","useEffect","log","db","firebase","firestore","userId","userEmail","collection","doc","set","uploadSession","AssignmentList","List","onRenderCell","item","index","actStyle","padding","height","icon","iconHovered","rootHovered","border","borderRadius","sessionDispatch","onAssignIdChanged","itemKey","check_button","ActionButton","iconProps","iconName","key","Item","align","grow","NavigationBar","buttonStyle","onItemNoChanged","SAT","onPrevTrial","onNextTrial","onPrevTodo","onNextTodo","onPrevAmbig","onNextAmbig","toString","horizontalAlign","IconButton","title","Label","minWidth","TextField","width","defaultValue","onKeyPress","event","target","newValue","parseInt","value","isNaN","Tasks","assign_items","progress","compute_progress","tokens","childrenGap","ProgressIndicator","itemName","label","Math","round","percentComplete","Separator","Controller","Token","token","isFocus","pos","endsWith","className","simplified","whiteSpace","transformUser","user_raw","empty","displayName","email","photoUrl","photoURL","uid","login","a","provider","GoogleAuthProvider","setPersistence","Auth","Persistence","LOCAL","then","signInWithPopup","result","credential","accessToken","debug","logout","signOut","fetchSenses","lemma","get","exists","data","senses","fetchSession","fetchAssignments","where","query","forEach","push","fetchAnnotations","annot","fetchSentence","sentenceId","split","fetchSenseTree","treeId","senseTree","FullTextModal","useState","fullText","setFullText","batchId","sentenceNoStr","Promise","reject","sentenceNo","sentPromises","Array","window","fill","_","i","newNo","allSettled","sents","loadFullText","catch","reason","Modal","titleAriaId","isOpen","onDismiss","main","maxWidth","lineHeight","SentenceViewer","sentence","isFullTextVisible","setFullTextVisible","tokenId","toggleFullTextVisible","preContextElems","preContext","postContextElems","postContext","top","right","overflowX","countLeaves","node","children","node_type","sum","toGroup","depth","group_members","group","node_id","tag","description","allCount","level","findNode","rootNode","predicate","nodeList","findNodes","findNodeTrace","path","buf","pop","cur_node","cur_path","findParent","paths","moveNode","srcNode","tgtNode","newRoot","tgtParent","srcParent","causeLoop","srcIndex","splice","tgtIndex","newNodeList","slice","getLeaves","parent","flat","getGroupedSenses","ref_senses","filterText","sense_nodes","idx","cwn_id","sense_x","sense","parents","group_map","item_x","parent_x","parent_id","out_items","out_groups","groupNode","groupTitle","count","startIndex","groups","makeSenseTreeGroupNode","suffix","makeSenseTreeSenseNode","definition","getSenseRevision","trial","revision","annotator","timestamp","candidates","makeNewSenseRevision","cloneSenseRevision","newRevision","makeNewSenseTree","annotatorId","senseSetter","SenseItem","ref","useRef","useDrag","senseId","collect","monitor","isDragging","examples","drag","useDrop","accept","drop","onDragAndDrop","canDrop","TooltipHost","tooltipProps","onRenderContent","substr","delay","TooltipDelay","long","directionalHint","DirectionalHint","rightCenter","Persona","imageInitials","initialsColor","text","secondaryText","size","PersonaSize","size32","showSecondaryText","marginTop","userSelect","primaryText","selectionModel","Selection","onSelectionChanged","getSelection","SenseList","onSenseDragAndDrop","srcSenseId","tgtSenseId","newTree","onSenseTreeUpdated","groupedSenses","overflowY","GroupedList","nestingDepth","senseRevision","onSenseRevisionUpdated","onSenseSelected","compact","selectionMode","SelectionMode","none","groupProps","showEmptyGroups","GroupInfoEdit","groupInfo","setGroupInfo","mergeStyleSets","margin","textInput","FocusTrapCallout","role","gapSpace","elemId","setInitialFocus","onChange","ev","newvalue","paddingTop","Button","PrimaryButton","onGroupInfoUpdate","SenseTreeGroupHeader","toggleCollapse","onToggleCollapse","editVisibility","setEditVisibility","toggleEditVisibility","groupNodeId","nodeId","isOver","groupButton","isCollapsed","countStr","deleteButton","deleteState","onDeleteGroup","editCallout","onGroupHeaderUpdate","marginLeft","groupLevel","verticalAlign","onGroupHeaderClick","onDoubleClick","ResetSenseTreeDialog","dialogContentProps","DialogType","normal","closeButtonAriaLabel","subText","Dialog","hidden","hideDialog","DialogFooter","onConfirmReset","backgroundColor","DefaultPalette","red","DefaultButton","SenseTreeView","setDeleteState","resetDialogShown","setResetDialogShown","onGroupHeaderDrangAndDrop","srcNodeId","tgtNodeId","deleteGroup","removeGroupNode","toggleResetDialog","boxShadow","Depths","depth8","newSenseTree","newNode","unshift","addGroupNode","itemIndex","onRenderHeader","headerProps","elemProps","groupId","onSelectedNodeUpdated","SensePicker","selectedItems","senseCandidates","PersonaInitialsColor","optionalText","onResolveSuggestions","onSenseSuggestions","onPickerChanged","annot_exclusion_options","itemType","DropdownMenuItemType","Header","Divider","RevisionView","iconStyle","isExcluded","setIsExcluded","suppTextRef","onRevisionUpdated","onExclusionUpdated","supp_text","note","selectedSenses","targets","exclOptionKey","exclSuppText","exclusionElem","Dropdown","placeholder","selectedKey","options","componentRef","onBlur","suppText","current","pickerElem","newCandidates","filterStr","serial","senseInGroups","flatMap","leafs","leaf","findSense","filteredSenses","startsWith","parseFilter","onSubmit","paddingBottom","ariaLabel","disabled","isRevisionComplete","themePrimary","SenseSorter","__senseRevision","setSenses","setSenseTree","selectedNode","setSelectedNode","selectedGroups","setSelectedGroups","setSenseRevision","senseNodeIds","orphanSenses","uncatGroups","uncatCount","uncatSerials","max","orphanGroup","checkSenseTree","uploadSenseTree","sensePromise","updateSenses","senseTreePromise","initSenseTree","all","session_dispatcher","new_session","NaN","assignments_setter","annotations_setter","trial_setter","preContextId","getPreContext","postContextId","getPostContext","makeNewAnnotation","annotId","getContext","direction","SenseAnnot","setUser","setAnnotations","setAssignments","setTrial","signed_in","not_signed_in","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onAuthStateChanged","raw_user","updateSession","updateAssignments","updateAnnotations","updateTrial","onAnnotationUpdated","newAnnotation","annotation","background","borderRight","newAnnotations","updateSenseRevision","initializeIcons","App","DndProvider","backend","HTML5Backend","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2c7a10f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { User } from \"../datatypes\"\r\nimport { Link, Stack } from \"@fluentui/react\"\r\n\r\nexport interface ILoginStatus {\r\n  user: User|null;\r\n  login_fn: () => void;\r\n  logout_fn: () => void;\r\n}\r\n\r\nexport function LoginStatus(props: ILoginStatus) {\r\n  let linkStyle = {root: {color: \"white\", fontSize: \"small\", textDecoration: \"underline\"}}\r\n  if (props.user) {\r\n    return (\r\n      <Stack horizontal>\r\n        <div>{props.user.name}</div>\r\n        <div style={{paddingLeft: \"10pt\"}}>\r\n          <Link styles={linkStyle} onClick={props.logout_fn}>Logout</Link>\r\n        </div>\r\n      </Stack>\r\n    )\r\n  } else {\r\n    return (\r\n      <Stack horizontal>\r\n        <div>Not logged in</div>\r\n        <div>\r\n          <Link styles={linkStyle} onClick={props.login_fn}>Login</Link>\r\n        </div>\r\n      </Stack>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Stack } from \"@fluentui/react\";\r\nimport { SenseAnnotSession } from \"../datatypes\";\r\n\r\nexport interface ISessionInfoProps {\r\n  session: SenseAnnotSession | null,\r\n}\r\n\r\nexport function SessionInfo(props: ISessionInfoProps) {\r\n  if (props.session !== null) {\r\n    let sess = props.session;\r\n    let last_time = new Date(sess.lastActivity).toLocaleString(\"en-GB\")\r\n    return (\r\n      <Stack id=\"session-wrapper\">\r\n        <div style={{fontSize: \"small\"}}>Last activity:</div>\r\n        <div style={{fontSize: \"small\"}}>{last_time}</div>        \r\n      </Stack>\r\n    )\r\n  } else {\r\n    return <Stack id=\"session-wrapper\"></Stack>;\r\n  }\r\n\r\n}","import { Annotations, Assignments } from \"../../datatypes\";\r\n\r\nexport interface ITaskItem {\r\n  name: string;\r\n  checked: boolean;\r\n  nTotal: number;\r\n  nDone: number; nAmbig: number; nExcl: number;\r\n}\r\n\r\n\r\nexport function compute_progress(items: ITaskItem[]) {\r\n  let { nDone, nTotal } = items.reduce((obj, x) => {\r\n    obj.nDone += x.nDone + x.nExcl;\r\n    obj.nTotal += x.nTotal;\r\n    return obj;\r\n  }, { nDone: 0, nTotal: 0 });\r\n  return nDone / nTotal;\r\n}\r\n\r\nfunction summarise_progress(\r\n  annotations: Annotations, assign_id: string) {\r\n\r\n  return Object.values(annotations[assign_id].results)\r\n    .reduce((obj, x) => {\r\n      if(x.status != \"EXCLUDED\"){\r\n        if (x.probs.length > 0) {\r\n          obj.nDone += x.probs[0] >= 0.8 ? 1 : 0;\r\n          // obj.nAmbig += x.probs[0] < 0.8 ? 1 : 0;\r\n        }\r\n      } else {\r\n        obj.nExcl += x.status == \"EXCLUDED\"? 1: 0;\r\n      }\r\n                            \r\n      return obj;\r\n    }, { nDone: 0, nAmbig: 0, nExcl: 0 })\r\n}\r\n\r\nexport function populate_task_items(\r\n  currentAssignId: string,\r\n  assignments: Assignments,\r\n  annotations: Annotations\r\n) {\r\n\r\n  return assignments.map((x) => {\r\n    let assign_id = x.assignId;    \r\n    let nTotal = x.items.length;\r\n    let nDone = 0;\r\n    let nAmbig = 0;\r\n    let nExcl = 0;\r\n    if (assign_id in annotations) {\r\n      ({ nDone, nAmbig, nExcl } = summarise_progress(\r\n        annotations, assign_id))\r\n    }\r\n\r\n    return {\r\n      name: x.assignId,\r\n      nTotal, nDone, nAmbig, nExcl,\r\n      checked: x.assignId === currentAssignId\r\n    } as ITaskItem;\r\n  });\r\n}\r\n\r\n\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { SenseAnnotSession, Assignments, Annotations, User } from \"../../datatypes\";\r\nimport { SessionMapper } from \"./sessionHandler\";\r\nimport { uploadSession } from \"../annot_uploader\";\r\n\r\nexport interface SessionAction {\r\n  type: SessionActionType;\r\n  payload: SessionActionPayload;\r\n}\r\n\r\nexport interface SessionActionPayload {\r\n  newSession?: NullableSessionType;\r\n  newAssignId?: string;\r\n  newItemId?: string;\r\n  newItemNo?: number;\r\n}\r\n\r\nexport enum SessionActionType {\r\n  Update = \"UPDATE\",\r\n  Init = \"INIT\",\r\n  GotoAssignment = \"GOTO_ASSIGNMENT\",\r\n  GotoItemNo = \"GOTO_ITEMNO\",\r\n  NextTrial = \"NEXT_TRIAL\",\r\n  PrevTrial = \"PREV_TRIAL\",\r\n  NextTodo = \"NEXT_TODO\",\r\n  PrevTodo = \"PREV_TODO\",\r\n  NextAmbig = \"NEXT_AMBIG\",\r\n  PrevAmbig = \"PREV_AMBIG\"\r\n}\r\n\r\ntype NullableSessionType = SenseAnnotSession | null;\r\nexport type SessionDispatch = (type: SessionActionType, payload?: SessionActionPayload) => void;\r\n\r\nexport function useSession(\r\n  assignments: Assignments,\r\n  annotations: Annotations\r\n): [NullableSessionType, SessionDispatch] {\r\n\r\n  let initState: NullableSessionType = null;\r\n\r\n  function reducer(session: NullableSessionType, action: SessionAction): NullableSessionType {\r\n\r\n    let newSession = session;\r\n    if (session === null) {\r\n      if (action.type == SessionActionType.Update) {\r\n        const payload = action.payload;\r\n        newSession = payload.newSession ? payload.newSession : session;\r\n      }\r\n    } else {\r\n      newSession = mapSession(session, assignments, annotations, action);\r\n    }\r\n\r\n    return newSession;\r\n  }\r\n\r\n  const [session, dispatch] = useReducer(reducer, initState);\r\n\r\n  useEffect(()=>{    \r\n    if (session) {     \r\n      console.log(\"Upload new session\");       \r\n      uploadSession(session);\r\n    }\r\n  }, [session]);\r\n\r\n  function dispatch_wrapper(type: SessionActionType,\r\n    payload: SessionActionPayload = {}) {\r\n\r\n    dispatch({\r\n      type: type,\r\n      payload: payload\r\n    });\r\n  }\r\n\r\n  return [session, dispatch_wrapper];\r\n}\r\n\r\nfunction mapSession(\r\n  session: SenseAnnotSession,\r\n  assignments: Assignments,\r\n  annotations: Annotations,\r\n  action: SessionAction) {\r\n  \r\n  const handler = new SessionMapper(session, assignments, annotations);\r\n  let newSession = null;\r\n  let payload = action.payload;\r\n  switch (action.type) {\r\n    case SessionActionType.Update:\r\n      newSession = payload.newSession ? payload.newSession : session;\r\n    case SessionActionType.Init:\r\n      newSession = handler.initializeSession();\r\n      break;\r\n    case SessionActionType.GotoAssignment:\r\n      newSession = handler.gotoAssignment(payload.newAssignId!);\r\n      break;\r\n      case SessionActionType.GotoItemNo:\r\n        newSession = handler.gotoItemNo(payload.newItemNo!);\r\n        break;\r\n    case SessionActionType.NextTrial:\r\n      newSession = handler.nextTrial();\r\n      break;\r\n    case SessionActionType.PrevTrial:\r\n      newSession = handler.prevTrial();\r\n      break;\r\n    case SessionActionType.NextTodo:\r\n      newSession = handler.nextTodo();\r\n      break;\r\n    case SessionActionType.PrevTodo:      \r\n      newSession = handler.prevTodo();\r\n      break;\r\n    case SessionActionType.NextAmbig:\r\n      newSession = handler.nextAmbiguous();\r\n      break;\r\n    case SessionActionType.PrevAmbig:\r\n      newSession = handler.prevAmbiguous();\r\n      break;\r\n    default:\r\n      console.error(\"Unsupported session action type\");\r\n      break;\r\n  }\r\n\r\n  return newSession;\r\n}\r\n\r\n","import { Assignments, Annotations, SenseAnnotSession, Assignment, SenseRevision } from \"../../datatypes\";\r\nimport { SessionActionPayload } from \"./sessionReducer\";\r\n\r\nexport class SessionMapper {\r\n  private session = {} as SenseAnnotSession;\r\n  private assignments = [] as Assignments;\r\n  private annotations = {} as Annotations;\r\n\r\n  constructor(session: SenseAnnotSession,\r\n    assignments: Assignments,\r\n    annotations: Annotations) {\r\n    this.session = session;\r\n    this.assignments = assignments;\r\n    this.annotations = annotations;\r\n  }\r\n\r\n  nextTrial() { return this.stepTrial((x) => x + 1); }\r\n\r\n  prevTrial() { return this.stepTrial((x) => x - 1); }\r\n\r\n  nextTodo() { return this.stepTodo((x) => x + 1); }\r\n\r\n  prevTodo() { return this.stepTodo((x) => x - 1); }\r\n\r\n  nextAmbiguous() { return this.stepAmbig((x) => x + 1); }\r\n\r\n  prevAmbiguous() { return this.stepAmbig((x) => x - 1); }\r\n\r\n  initializeSession() {    \r\n    if (this.hasAssignments()) {\r\n      return this.gotoAssignment(this.assignments[0].assignId);\r\n    } else {\r\n      return this.session;\r\n    }\r\n  }\r\n\r\n  gotoAssignment(newAssignId: string) {\r\n    try {\r\n      const assig = this.findAssignment(newAssignId);\r\n      if (assig.items.length > 0) {\r\n        let newSession = this.cloneSession(\r\n          assig.assignId, assig.items[0]);\r\n        return newSession;\r\n      } else {\r\n        return this.session;\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      return this.session;\r\n    }\r\n  }\r\n\r\n  gotoItemNo(itemNo: number){\r\n    let newSession = this.session;\r\n    try{\r\n      const assig = this.findAssignment(this.session.currentAssignmentId);\r\n      if(itemNo >= 0 && itemNo < assig.items.length){\r\n        const itemId = assig.items[itemNo];\r\n        newSession = this.cloneSession(assig.assignId, itemId);        \r\n      } \r\n    } catch (err) {\r\n      console.error(\"Error when gotoItemNo\")\r\n      console.error(err);\r\n    }\r\n    return newSession;\r\n  }\r\n\r\n  private hasAssignments() {\r\n    return this.assignments.length > 0\r\n  }\r\n\r\n  private stepTrial(stepFunc: (x: number) => number) {\r\n    let newSession = this.session;\r\n    try {\r\n      const assig = this.findAssignment(this.session.currentAssignmentId);\r\n      let itemNo = this.findItemNo(assig, this.session.currentItemId);\r\n      itemNo = stepFunc(itemNo);\r\n      if (itemNo >= 0 && itemNo < assig.items.length) {\r\n        const newItemId = assig.items[itemNo];\r\n        newSession = this.cloneSession(assig.assignId, newItemId);\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    \r\n    return newSession;\r\n  }\r\n\r\n  private stepTodo(stepFunc: (x: number) => number) {\r\n    let newSession = this.session;\r\n    try {\r\n      const assig = this.findAssignment(this.session.currentAssignmentId);\r\n      const curItemId = this.session.currentItemId;      \r\n      const dones = assig.assignId in this.annotations?\r\n        Object.keys(this.annotations[assig.assignId].results): [];\r\n\r\n      const todos = assig.items.filter((x) => x == curItemId || dones.indexOf(x) < 0);\r\n      let cursor = stepFunc(todos.indexOf(curItemId));      \r\n      if (cursor > 0 && cursor < todos.length) {\r\n        const newItemId = todos[cursor];\r\n        newSession = this.cloneSession(assig.assignId, newItemId);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    return newSession;\r\n  }\r\n\r\n  private stepAmbig(stepFunc: (x: number) => number) {\r\n    let newSession = this.session;\r\n\r\n    try {\r\n      const assig = this.findAssignment(this.session.currentAssignmentId);\r\n      const curItemId = this.session.currentItemId;\r\n      const results = assig.assignId in this.annotations?\r\n        this.annotations[assig.assignId].results: {};\r\n      const ambigs = assig.items.filter((itemId: string) => {\r\n        if(!(itemId in results)) return false;\r\n        const rev = results[itemId];\r\n        return rev.probs.length > 0 && rev.probs[0] > 0.5;        \r\n      });\r\n\r\n      let cursor = stepFunc(ambigs.indexOf(curItemId));\r\n      if (cursor > 0 && cursor < ambigs.length) {\r\n        const newItemId = ambigs[cursor];\r\n        newSession = this.cloneSession(assig.assignId, newItemId);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    return newSession;\r\n  }\r\n\r\n  private findAssignment(assignId: string): Assignment {    \r\n    const curAssigs = this.assignments.filter((x) => x.assignId == assignId);\r\n\r\n    if (curAssigs.length > 0) {\r\n      return curAssigs[0];\r\n    } else {\r\n      throw new Error(`Cannot find current assignment (${assignId})`)\r\n    }\r\n  }\r\n\r\n  private findItemNo(\r\n    assignment: Assignment, itemId: string): number {\r\n\r\n    const curItemId = itemId !== undefined? itemId: this.session.currentItemId    \r\n    const curItemSerial = assignment.items.indexOf(curItemId);\r\n\r\n    if (curItemSerial >= 0) {\r\n      return curItemSerial;\r\n    } else {\r\n      throw Error(`itemId (${curItemId}) not found in assignment(${assignment.assignId})`);\r\n    }\r\n\r\n  }\r\n\r\n  private cloneSession(assignId: string = \"\", itemId: string = \"\") {\r\n\r\n    let newSession = Object.assign({}, this.session);\r\n    if (assignId.length > 0) {\r\n      newSession.currentAssignmentId = assignId;\r\n    }\r\n\r\n    if (itemId.length > 0) {\r\n      newSession.currentItemId = itemId;\r\n    }\r\n\r\n    try{\r\n      const assig = this.findAssignment(assignId);\r\n      newSession.currentItemNo = this.findItemNo(assig, itemId);\r\n    } catch (err){\r\n      console.error(err);\r\n    }\r\n\r\n    newSession.lastActivity = Date.now();\r\n    \r\n    return newSession;\r\n  }\r\n\r\n}","import { SenseAnnotSession, Annotations, Annotation } from \"../datatypes\";\r\nimport firebase from \"firebase\";\r\n\r\nexport function uploadSession(session: SenseAnnotSession){  \r\n  let db = firebase.firestore();\r\n  let userId = session.userId;\r\n  let userEmail = session.userEmail;\r\n  let result = db.collection(\"sessions\").doc(userId).set(session);\r\n  return result;\r\n}\r\n\r\nexport function uploadAnnotation(annotation: Annotation){\r\n    let db = firebase.firestore();\r\n    let result = db.collection(\"annotations\")\r\n      .doc(annotation.annotId).set(annotation);\r\n    return result;\r\n}","import React from 'react';\r\nimport { Annotations, Assignments } from '../../datatypes';\r\nimport { List, ActionButton, Stack, concatStyleSetsWithProps } from '@fluentui/react';\r\nimport { ITaskItem } from './task_utils';\r\nimport { SessionDispatch, SessionActionType } from '../../SenseAnnot/sessionUtils/sessionReducer';\r\n\r\nexport interface IAssignmentListProps {\r\n  items: ITaskItem[]\r\n  sessionDispatch: SessionDispatch;\r\n}\r\n\r\nfunction makeEventHandler(dispatch: SessionDispatch){\r\n  return {\r\n    onAssignIdChanged: (assignId:string) => {\r\n      dispatch(SessionActionType.GotoAssignment, {newAssignId: assignId});\r\n    }\r\n  }\r\n}\r\n\r\nexport function AssignmentList(props: IAssignmentListProps) {\r\n  function render_task_item(item: ITaskItem | undefined, index: number | undefined) {\r\n\r\n    let actStyle = {\r\n      root: { padding: \"1px\", height: \"24pt\" },\r\n      icon: { color: \"white\" },\r\n      iconHovered: { color: \"white\" },\r\n      rootHovered: {\r\n        border: \"1px solid white\",\r\n        borderRadius: \"5px\"\r\n      }\r\n    };\r\n\r\n    const handler = makeEventHandler(props.sessionDispatch);\r\n\r\n    if (item) {\r\n      const itemKey = `${item.name}-${item.nDone}-${item.nExcl}-${item.nTotal}`;\r\n\r\n      let check_button = item.checked ?\r\n        (<ActionButton styles={actStyle} iconProps={{ iconName: \"MSNVideosSolid\" }} checked={false} />) :\r\n        (<ActionButton styles={actStyle}\r\n          onClick={()=>handler.onAssignIdChanged(item.name)}\r\n          iconProps={{ iconName: \"MSNVideos\" }}\r\n          checked={false} />);\r\n                \r\n      return (\r\n        <Stack horizontal key={itemKey}>\r\n          <Stack.Item align=\"center\">{check_button}</Stack.Item>\r\n          <Stack.Item grow={1} align=\"center\">{item.name}</Stack.Item>\r\n          <Stack.Item align=\"center\">{item.nDone}/{item.nExcl}/{item.nTotal}</Stack.Item>\r\n        </Stack>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  return (\r\n    <List items={props.items} onRenderCell={render_task_item}></List>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Stack, IconButton, TextField, Label } from '@fluentui/react';\r\nimport { SessionDispatch, SessionActionType as SAT } from '../../SenseAnnot/sessionUtils/sessionReducer';\r\n\r\nexport interface INavigationBar {\r\n  currentItemNo: number;\r\n  sessionDispatch: SessionDispatch;\r\n}\r\nexport function NavigationBar(props: INavigationBar) {\r\n  let buttonStyle = {\r\n    root:\r\n      { color: \"white\", border: \"1px solid white\", borderRadius: \"5px\" }\r\n  }\r\n\r\n  const handler = makeEventHandler(props.sessionDispatch)\r\n  const currentItemNo = (props.currentItemNo + 1).toString();\r\n\r\n  return (\r\n    <>\r\n      <Stack horizontal horizontalAlign=\"space-evenly\">\r\n        <IconButton styles={buttonStyle}\r\n          onClick={handler.onPrevTrial}\r\n          iconProps={{ iconName: \"CaretSolidLeft\" }}\r\n          title=\"Previous Item\" />\r\n        <IconButton styles={buttonStyle}\r\n          onClick={handler.onPrevTodo}\r\n          iconProps={{ iconName: \"CaretLeft8\" }}\r\n          title=\"Previous Todo\" />\r\n        <IconButton styles={buttonStyle}\r\n          onClick={handler.onNextTodo}\r\n          iconProps={{ iconName: \"CaretRight8\" }} title=\"Next Todo\" />\r\n        <IconButton styles={buttonStyle}\r\n          onClick={handler.onNextTrial}\r\n          iconProps={{ iconName: \"CaretSolidRight\" }}\r\n          title=\"Next Item\" />\r\n      </Stack>\r\n      <Stack horizontal>\r\n        <Stack.Item>\r\n          <Label styles={{ root: { color: \"white\", minWidth: \"70px\" } }}>Go to Item</Label>\r\n        </Stack.Item>\r\n        <Stack.Item grow={1}>\r\n          <TextField styles={{ root: { width: \"100%\" } }}\r\n            key={currentItemNo}\r\n            defaultValue={currentItemNo}\r\n            onKeyPress={(event) => {\r\n              if (event.key === 'Enter') {\r\n                const target = event.target as HTMLTextAreaElement;\r\n                const newValue = parseInt(target.value);\r\n                if (newValue != undefined && !isNaN(newValue)) {\r\n                  handler.onItemNoChanged(newValue-1);\r\n                }\r\n              }\r\n            }} />\r\n        </Stack.Item>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nfunction makeEventHandler(dispatch: SessionDispatch) {\r\n  return {\r\n    onItemNoChanged: (itemNo: number) => {      \r\n        dispatch(SAT.GotoItemNo, { newItemNo: itemNo });      \r\n    },\r\n    onPrevTrial: () => { dispatch(SAT.PrevTrial); },\r\n    onNextTrial: () => { dispatch(SAT.NextTrial); },\r\n    onPrevTodo: () => { dispatch(SAT.PrevTodo); },\r\n    onNextTodo: () => { dispatch(SAT.NextTodo); },\r\n    onPrevAmbig: () => { dispatch(SAT.PrevAmbig); },\r\n    onNextAmbig: () => { dispatch(SAT.NextAmbig); }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Assignments, Annotations, SenseAnnotSession } from '../../datatypes';\r\nimport { Stack, ProgressIndicator, Separator } from '@fluentui/react';\r\nimport { populate_task_items, compute_progress } from './task_utils';\r\nimport { AssignmentList } from './AssignmentList';\r\nimport { NavigationBar } from './NavigationBar';\r\nimport { SessionDispatch } from '../../SenseAnnot/sessionUtils/sessionReducer';\r\n\r\n\r\nexport interface ITasksProps {\r\n  session: SenseAnnotSession | null;\r\n  assignments: Assignments;\r\n  annotations: Annotations;\r\n  sessionDispatch: SessionDispatch;\r\n}\r\n\r\nexport function Tasks(props: ITasksProps) {\r\n  let assignments = props.assignments;\r\n  let annotations = props.annotations;  \r\n\r\n  if(props.session === null){\r\n    return null;\r\n  }\r\n\r\n  let session = props.session!;\r\n  let assign_items = populate_task_items(\r\n    session.currentAssignmentId, props.assignments, props.annotations);\r\n  let progress = compute_progress(assign_items);  \r\n\r\n  return (\r\n    <Stack tokens={{ childrenGap: 10 }}>\r\n      <ProgressIndicator\r\n        styles={{ itemName: { color: \"white\" } }}\r\n        label={`${Math.round(progress * 10000) / 100}% Complete`}\r\n        percentComplete={progress} />\r\n      <NavigationBar\r\n        currentItemNo={session.currentItemNo}\r\n        sessionDispatch={props.sessionDispatch}/>\r\n      <Separator></Separator>\r\n      <AssignmentList\r\n        sessionDispatch={props.sessionDispatch}\r\n        items={assign_items} />\r\n    </Stack>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { User, SenseAnnotSession, Assignments, Annotations, Assignment } from \"../datatypes\"\r\nimport { Stack } from '@fluentui/react';\r\nimport { LoginStatus } from './LoginStatus';\r\nimport { SessionInfo } from './SessionInfo';\r\nimport { Tasks } from './Tasks';\r\nimport { SessionDispatch } from '../SenseAnnot/sessionUtils/sessionReducer';\r\n\r\nexport interface IControllerData {\r\n  user: User | null;\r\n  session: SenseAnnotSession | null;\r\n  assignments: Assignments;\r\n  annotations: Annotations;\r\n  sessionDispatch: SessionDispatch\r\n  login_fn: () => void;\r\n  logout_fn: () => void;\r\n}\r\n\r\nfunction Controller(props: IControllerData) {\r\n\r\n  return (\r\n\r\n    <Stack tokens={{ childrenGap: 5, padding: 10 }}>      \r\n      <LoginStatus user={props.user} login_fn={props.login_fn} logout_fn={props.logout_fn} />\r\n      <SessionInfo session={props.session}></SessionInfo>\r\n      <Tasks\r\n        session={props.session}\r\n        assignments={props.assignments}\r\n        annotations={props.annotations}\r\n        sessionDispatch={props.sessionDispatch}\r\n        ></Tasks>\r\n    </Stack>\r\n  )\r\n}\r\n\r\n\r\nexport default Controller;","import React from 'react';\r\nimport { PretaggedToken } from '../datatypes';\r\nimport { Stack, mergeStyles, IStyle } from '@fluentui/react';\r\nimport './token.css';\r\n\r\nexport interface ITokenProps {\r\n  token: PretaggedToken;\r\n  isFocus?: boolean;\r\n  simplified?: boolean;\r\n}\r\n\r\nexport function Token(props: ITokenProps) {\r\n  let { token, isFocus } = props;  \r\n  let posStyle = { fontSize: \"10pt\" };\r\n\r\n  let pos = props.token[1].endsWith(\"CATEGORY\")?\r\n    \"\\u3000\":props.token[1];\r\n\r\n  return (\r\n    <Stack horizontalAlign=\"center\" className={isFocus ? \"focus-token\" : \"\"}>      \r\n      {/* POS */}\r\n      <div style={posStyle}>{props.simplified? \"\\u3000\": pos}</div>\r\n      <div\r\n        style={{fontSize: \"large\", whiteSpace: \"nowrap\"}}\r\n        title={`${token[2]}:${token[3]}`}>\r\n        {token[0]}\r\n      </div> {/* Word */}\r\n    </Stack>\r\n  )\r\n}","import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {User} from \"../datatypes\"\r\n\r\nfunction transformUser(user_raw: firebase.User): User{\r\n  let empty = (x: string|null) => {return x? x: \"\"};\r\n  let user = {\r\n    name: empty(user_raw.displayName),\r\n    email: empty(user_raw.email),\r\n    photoUrl: empty(user_raw.photoURL),\r\n    uid: empty(user_raw.uid)\r\n  }\r\n  return user;\r\n}\r\nexport async function login() {\r\n  console.log(\"login function called\");\r\n  let provider = new firebase.auth.GoogleAuthProvider();\r\n  try {\r\n    const result = await firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n                    .then(()=>{\r\n                      return firebase.auth().signInWithPopup(provider);\r\n                    });\r\n    \r\n    if (result.credential) {\r\n      let token = (result.credential as firebase.auth.OAuthCredential).accessToken;\r\n      let user: User|null = null;      \r\n      let user_raw = result.user;\r\n      if (user_raw){        \r\n        user = transformUser(user_raw);\r\n      }\r\n      return user;      \r\n    }\r\n  }\r\n  catch (error) {\r\n    console.debug(error);\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  firebase.auth().signOut();\r\n}\r\n\r\nexport function subscribeLoginStatus(\r\n    signed_in: ((user: User)=>void), \r\n    not_signed_in: (()=>void)) {\r\n  firebase.auth().onAuthStateChanged((raw_user)=>{\r\n    if(raw_user){\r\n      let user = transformUser(raw_user);\r\n      signed_in(user);\r\n    } else {\r\n      not_signed_in();\r\n    }\r\n  })\r\n}","import { SenseAnnotSession, User, Assignments, Annotations, PretaggedSentence, PretaggedToken, SenseTree, SenseRevision, Annotation, Assignment } from \"../datatypes\";\r\nimport { CwnSense } from \"../datatypes\";\r\nimport { object } from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport { makeNewSenseTree } from \"../SenseSorter/sorter_utils\";\r\n\r\n\r\n\r\nexport async function fetchSenses(lemma: string): Promise<CwnSense[]> {\r\n  let db = firebase.firestore();\r\n  let doc = await db.collection(\"senses\").doc(lemma).get();\r\n\r\n  if (doc.exists) {\r\n    let data = doc.data() as {lemma: string, senses: CwnSense[]};\r\n    return data.senses;\r\n  } else {\r\n    throw new Error(\"Cannot find lemma \" + lemma);\r\n  }\r\n}\r\n\r\n\r\nexport async function fetchSession(user: User)\r\n  : Promise<SenseAnnotSession | null> {\r\n  let db = firebase.firestore();    \r\n  let doc = await db.collection(\"sessions\").doc(user.uid).get();\r\n  if (doc.exists) {\r\n    return doc.data() as SenseAnnotSession;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport async function fetchAssignments(user: User)\r\n  : Promise<Assignments> {\r\n  let db = firebase.firestore();\r\n  let query = await db.collection(\"assignments\")\r\n    .where(\"annotatorId\", \"==\", user.uid).get();\r\n  let assignments: Assignments = []\r\n  query.forEach((doc) => {\r\n    assignments.push(doc.data() as Assignment);\r\n  });\r\n  return assignments;\r\n}\r\n\r\nexport async function fetchAnnotations(user: User)\r\n  : Promise<Annotations> {\r\n  let db = firebase.firestore();\r\n  let query = await db.collection(\"annotations\")\r\n    .where(\"annotatorId\", \"==\", user.uid).get();\r\n  let annotations: Annotations = {};\r\n  query.forEach((doc) => {\r\n    let annot = doc.data() as Annotation;\r\n    annotations[annot.assignId] = annot;\r\n  });\r\n  return annotations;\r\n}\r\n\r\n\r\nexport async function fetchSentence(sentenceId: string)\r\n  : Promise<PretaggedToken[]> {\r\n  let db = firebase.firestore();\r\n\r\n  let doc = await db.collection(\"sentences\").doc(sentenceId).get();\r\n  if (doc.exists) {\r\n    let data = doc.data()! as { sid: string, tokens: string[] };\r\n    let tokens = (data.tokens as string[])\r\n      .map((x) => x.split(\"::\")) as PretaggedToken[];\r\n    return tokens;\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function fetchSenseTree(userEmail: string, lemma: string)\r\n  : Promise<SenseTree | null> {\r\n\r\n  let db = firebase.firestore();\r\n  let treeId = `${userEmail}-${lemma}`;\r\n  let senseTree = null;\r\n\r\n  let doc = await db.collection(\"senseTrees\").doc(treeId).get();\r\n  if (doc.exists) {\r\n    senseTree = doc.data() as SenseTree;\r\n  }\r\n\r\n  return senseTree;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal } from '@fluentui/react';\r\nimport { fetchSentence } from '../DataHandler';\r\nimport { PretaggedToken } from '../datatypes';\r\n\r\nexport interface IFullTextModalProps {\r\n  itemId: string;\r\n  isOpen: boolean;\r\n  onDismiss: () => void;\r\n}\r\n\r\nfunction loadFullText(itemId: string) {\r\n  console.log(\"Loading fulltext...\");\r\n  const sentenceId = itemId.split(\":\")[0];\r\n  const [batchId, sentenceNoStr] = sentenceId.split(\"-\");\r\n  if (!batchId || !sentenceNoStr) {\r\n    Promise.reject(\"Cannot parse itemId\");\r\n  };\r\n\r\n  const sentenceNo = parseInt(sentenceNoStr);\r\n  if (isNaN(sentenceNo)) {\r\n    Promise.reject(\"No sentence number\")\r\n  }\r\n\r\n  const window = 10;\r\n  const sentPromises = Array(window * 2 + 1).fill(0).map((_, i) => {\r\n    const newNo = sentenceNo + (i - window);\r\n    if (newNo < 0) {\r\n      return null;\r\n    } else {\r\n      return fetchSentence(`${batchId}-${newNo}`);\r\n    }\r\n  }).filter((x) => x != null);\r\n\r\n  const fulltext = Promise.allSettled(sentPromises)\r\n    .then((results) => {\r\n      return results.reduce((sents, x) => {\r\n        if (x.status == \"fulfilled\" && x.value) {\r\n\r\n          const tokens: PretaggedToken[] = (x.value as unknown) as PretaggedToken[];\r\n          tokens.forEach((x) => sents.push(x));\r\n        }\r\n        return sents;\r\n      }, [] as PretaggedToken[])\r\n    });\r\n\r\n  return fulltext;\r\n}\r\n\r\nexport function FullTextModal(props: IFullTextModalProps) {\r\n\r\n  const [fullText, setFullText] = useState([] as PretaggedToken[]);\r\n  useEffect(() => {\r\n    loadFullText(props.itemId).then((result) => {\r\n      setFullText(result);\r\n    }).catch((reason) => {\r\n      console.error(reason);\r\n    });\r\n\r\n  }, [props.itemId]);\r\n\r\n  return (\r\n    <Modal\r\n      titleAriaId={`full-text-${props.itemId}`}\r\n      isOpen={props.isOpen}\r\n      onDismiss={props.onDismiss}\r\n      styles={{main: {maxWidth: \"60%\"}}}>\r\n      <div style={{ fontSize: \"large\", padding: \"5%\", lineHeight: \"150%\" }}>\r\n        {fullText.map((x) => {\r\n          return (<span>{x[0]}</span>)\r\n        })}\r\n      </div>\r\n\r\n    </Modal>\r\n\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { PretaggedToken } from '../datatypes';\r\nimport { Token } from './Token';\r\nimport { Stack, Link } from '@fluentui/react';\r\nimport { FullTextModal } from './FullTextModal';\r\n\r\nexport interface ISentenceViewerData {\r\n  preContext?: PretaggedToken[]\r\n  sentence: PretaggedToken[];\r\n  postContext?: PretaggedToken[]\r\n  itemId: string;\r\n}\r\n\r\nfunction SentenceViewer(props: ISentenceViewerData) {\r\n  let sentence = props.sentence;\r\n  let itemId = props.itemId;\r\n\r\n  const [isFullTextVisible, setFullTextVisible] = useState(false);\r\n    \r\n  if (sentence === undefined) {\r\n    return null;\r\n  } else {\r\n    let tokenId = -1;\r\n    try {\r\n      tokenId = parseInt(itemId.split(\":\")[1]);\r\n    } catch (err) {\r\n      //pass\r\n    }\r\n\r\n    const toggleFullTextVisible = () => {\r\n      setFullTextVisible(!isFullTextVisible);\r\n    }\r\n\r\n    const preContextElems = props.preContext ?\r\n      props.preContext.map((token, index) => {\r\n        return (<Token token={token} simplified></Token>)\r\n      }) : null;\r\n\r\n    const postContextElems = props.postContext ?\r\n      props.postContext.map((token, index) => {\r\n        return (<Token token={token} simplified></Token>)\r\n      }) : null;\r\n\r\n    return (      \r\n      <div className=\"row\">\r\n        <div className=\"mx-auto mt-4\">\r\n          <div className=\"position-relative card-body bg-light \r\n            p-3 mb-3 border border-primary rounded-lg\">                   \r\n            {isFullTextVisible? (\r\n              <FullTextModal\r\n                itemId={props.itemId}\r\n                isOpen={isFullTextVisible}\r\n                onDismiss={toggleFullTextVisible}/>\r\n            ): null}\r\n            <Link className=\"position-absolute\" \r\n              style={{top: \"1%\", right: \"1%\", fontSize: \"small\"}}  \r\n              onClick={toggleFullTextVisible}            \r\n              >全文</Link>\r\n            <Stack horizontal horizontalAlign=\"start\" tokens={{ childrenGap: 3 }}\r\n              styles={{root: {padding: \"12pt 0\", overflowX: \"auto\"}}}>\r\n              {preContextElems}\r\n              {sentence.map((token, index) => {\r\n                let isFocus = tokenId == index;\r\n                return (<Token token={token} isFocus={isFocus}></Token>)\r\n              })}\r\n              {postContextElems}\r\n            </Stack>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SentenceViewer;","import { SenseTreeNode, SenseTreePath, CwnSense, SenseTree } from \"../datatypes\";\r\nimport { IGroup, getParent } from \"@fluentui/react\";\r\nimport { chown } from \"fs\";\r\n\r\n\r\nexport interface GroupedSenses {\r\n  senses: CwnSense[];\r\n  groups: IGroup[];\r\n}\r\n\r\nexport function countLeaves(node: SenseTreeNode) {\r\n  if (node.children.length > 0) {\r\n    let count: number = node.children\r\n      .map((x) => x.node_type === \"group\" ? countLeaves(x) : 1)\r\n      .reduce((sum, x) => sum + x, 0);\r\n    return count;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport function toGroup(node: SenseTreeNode, depth = 0) {\r\n\r\n  let group_members = node.children\r\n    .filter((x) => x.node_type === \"group\")\r\n    .map((x) => toGroup(x, depth + 1))\r\n\r\n\r\n  let group = {\r\n    key: node.node_id,\r\n    name: node.title,\r\n    data: {\r\n      tag: node.tag,\r\n      description: node.description,\r\n      allCount: countLeaves(node)\r\n    },\r\n    level: depth,\r\n    children: group_members\r\n  } as IGroup;\r\n\r\n  return group;\r\n}\r\n\r\nexport function findNode(rootNode: SenseTreeNode,\r\n  predicate: (node: SenseTreeNode) => boolean): SenseTreeNode | null {\r\n\r\n  const nodeList = findNodes(rootNode, predicate);\r\n  const node = nodeList.length > 0 ? nodeList[0] : null;\r\n\r\n  return node;\r\n\r\n}\r\n\r\nexport function findNodes(rootNode: SenseTreeNode,\r\n  predicate: (node: SenseTreeNode) => boolean): SenseTreeNode[] {\r\n\r\n  let nodeTraces = findNodeTrace(rootNode, predicate);\r\n  let nodes = nodeTraces.map((path) => {\r\n    return path[path.length - 1]\r\n  });\r\n  return nodes;\r\n}\r\n\r\nfunction findNodeTrace(\r\n  rootNode: SenseTreeNode,\r\n  predicate: (node: SenseTreeNode) => boolean): SenseTreePath[] {\r\n\r\n  let buf: [SenseTreeNode, SenseTreePath][] = [[rootNode, []]];\r\n  let results: SenseTreePath[] = [];\r\n  while (buf.length > 0) {\r\n    const [cur_node, path] = buf.pop() as [SenseTreeNode, SenseTreePath];\r\n    const cur_path = [...path, cur_node];\r\n    if (predicate(cur_node)) {\r\n      results.push(cur_path);\r\n    }\r\n\r\n    cur_node.children.map((x) => buf.push([x, cur_path]));\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport function findParent(\r\n  rootNode: SenseTreeNode, target: SenseTreeNode): SenseTreeNode | null {\r\n  let paths = findNodeTrace(rootNode, (x) => x == target);\r\n  if (paths.length && paths[0].length > 1) {\r\n    return paths[0][paths[0].length - 2];\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function moveNode(\r\n  root: SenseTreeNode,\r\n  srcNode: SenseTreeNode,\r\n  tgtNode: SenseTreeNode): SenseTreeNode {\r\n\r\n  let newRoot = Object.assign({}, root);\r\n  const tgtParent = findParent(newRoot, tgtNode)\r\n  const srcParent = findParent(newRoot, srcNode);\r\n\r\n  // debugger;\r\n  if (tgtNode.node_type === \"group\") {\r\n    const causeLoop = findNode(srcNode, (x)=>x==tgtNode) != null;\r\n    // it is a group node\r\n    if (srcParent && !causeLoop) {\r\n      // remove srcNode from its parent\r\n      const srcIndex = srcParent.children.indexOf(srcNode);\r\n      srcParent.children.splice(srcIndex, 1);\r\n\r\n      tgtNode.children.push(srcNode);\r\n    }\r\n  } else {\r\n    // it is a leaf(sense) node    \r\n\r\n    if (tgtParent && srcParent) {\r\n      // remove srcNode from its parent      \r\n      const srcIndex = srcParent.children.indexOf(srcNode);\r\n      srcParent.children.splice(srcIndex, 1);\r\n\r\n      // add srcNode to tgtParent\r\n      const nodeList = tgtParent.children;\r\n      const tgtIndex = nodeList.indexOf(tgtNode);\r\n      let newNodeList = [\r\n        ...nodeList.slice(0, tgtIndex + 1),\r\n        srcNode,\r\n        ...nodeList.slice(tgtIndex + 1, nodeList.length)]\r\n      tgtParent.children = newNodeList;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return newRoot;\r\n}\r\n\r\ntype LeafTuple = { node: SenseTreeNode, parent: SenseTreeNode | null };\r\nexport function getLeaves(\r\n  node: SenseTreeNode, parent: SenseTreeNode | null = null):\r\n  LeafTuple[] {\r\n  if (node.children.length > 0) {\r\n    return node.children.map((x) => getLeaves(x, node)).flat();\r\n  } else {\r\n    return [{ node, parent }];\r\n  }\r\n}\r\n\r\nexport function getGroupedSenses(\r\n  node: SenseTreeNode,\r\n  ref_senses: CwnSense[],\r\n  filterText?: string): GroupedSenses {\r\n\r\n  type SenseTuple = { sense: CwnSense, parent: SenseTreeNode | null };  \r\n  const leaf_nodes = getLeaves(node);\r\n\r\n  const sense_nodes = leaf_nodes\r\n    .map((x) => {\r\n      const idx = ref_senses\r\n        .map((x) => x.cwn_id)\r\n        .indexOf(x.node.node_id)\r\n      let sense_x = null;\r\n      if (idx >= 0) {\r\n        sense_x = ref_senses[idx];\r\n      }\r\n      return { sense: sense_x, parent: x.parent } as SenseTuple;\r\n    })\r\n    .filter((x) => !!x.sense)\r\n    .filter((x) => !filterText || x.sense.cwn_id.indexOf(filterText) >= 0);\r\n\r\n  const items = sense_nodes.map((x) => x.sense);\r\n  const parents = sense_nodes.map((x) => x.parent);\r\n  const group_map = items.reduce((obj, item_x, i) => {\r\n    const parent_x = parents[i];\r\n    const parent_id = parent_x ? parent_x.node_id : \"__null__\";\r\n    obj[parent_id] = [...obj[parent_id] || [], item_x];\r\n    return obj;\r\n  }, {} as { [key: string]: CwnSense[] })\r\n\r\n  const out_items = Object.values(group_map).flat();\r\n  const out_groups = Object.keys(group_map).map((node_id: string) => {\r\n    let values = group_map[node_id];\r\n    let groupNode = findNode(node, (x) => x.node_id === node_id);\r\n    let groupTitle = (groupNode?.title) ? (groupNode?.title) : node_id;\r\n    \r\n    return {\r\n      count: values.length,\r\n      startIndex: out_items.indexOf(values[0]),\r\n      key: node_id,\r\n      name: groupTitle,\r\n      data: parents.filter((x) => x && (x.node_id == node_id))[0],\r\n      level: 0\r\n    } as IGroup    \r\n  });\r\n\r\n  return { senses: out_items, groups: out_groups } as GroupedSenses;\r\n}\r\n\r\nexport function makeSenseTreeGroupNode(title: string = \"\", suffix: string=\"\") {\r\n  return {\r\n    node_id: `group-${Date.now()}-${suffix}`,\r\n    description: \"\",\r\n    node_type: \"group\",\r\n    title: title.length > 0 ? title : \"未命名類別\",\r\n    tag: \"\",\r\n    children: []\r\n  } as SenseTreeNode;\r\n}\r\n\r\nexport function makeSenseTreeSenseNode(sense: CwnSense) {\r\n  return {\r\n    node_id: sense.cwn_id,\r\n    description: \"\",\r\n    node_type: \"sense\",\r\n    title: `(${sense.pos})${sense.definition}`,\r\n    tag: \"\",\r\n    children: []\r\n  } as SenseTreeNode;\r\n}\r\n\r\nexport function checkSenseTree(senseTree: SenseTree, senses: CwnSense[]) {\r\n  const root = senseTree.root;\r\n  const senseNodeIds = getLeaves(root)\r\n    .filter((x) => x.node.node_type == \"sense\")\r\n    .map((x) => x.node.node_id);\r\n  \r\n  let orphanSenses = senses.filter((x) => senseNodeIds.indexOf(x.cwn_id) < 0)\r\n  if (orphanSenses.length > 0) {        \r\n    const uncatGroups = findNodes(root, (x)=>x.node_id.endsWith(\"uncategorized\"));    \r\n    let uncatCount = 0;\r\n    if(uncatGroups.length > 0){ \r\n      const uncatSerials = uncatGroups.map((x)=>parseInt(x.title.split(\"-\")[1]))\r\n        .filter((x)=>!isNaN(x)); \r\n      uncatCount = uncatSerials.length > 0? Math.max(...uncatSerials)+1: 1;\r\n    }    \r\n\r\n    const uncatLabel = uncatCount == 0 ? \"未歸類\": `未歸類-${uncatCount}`;\r\n    let orphanGroup = makeSenseTreeGroupNode(uncatLabel, \"uncategorized\");\r\n    orphanGroup.children = orphanSenses.map(makeSenseTreeSenseNode);\r\n    root.children.push(orphanGroup);\r\n  }\r\n\r\n  return senseTree;\r\n}\r\n\r\nexport function removeGroupNode(root: SenseTreeNode, node: SenseTreeNode) {\r\n  const children = node.children;\r\n  const parent = findParent(root, node);\r\n  if (parent) {\r\n    // directly delete senses in group, they will be added back in checkSenseTree\r\n    // root.children.push(...children);\r\n    parent.children = parent.children.filter((x) => x !== node);\r\n  }\r\n  return root;\r\n\r\n}\r\n\r\nexport function addGroupNode(root: SenseTreeNode) {\r\n  let newNode = makeSenseTreeGroupNode();\r\n  root.children.unshift(newNode);\r\n  return root;\r\n}","import { SenseRevision, Trial, CwnSense, SenseTree, Annotations } from \"../datatypes\";\r\nimport { findNodes, getLeaves, makeSenseTreeGroupNode } from \"./tree_utils\";\r\n\r\n\r\nexport function getSenseRevision(\r\n  trial: Trial, annotations: Annotations) {\r\n\r\n  const itemId = trial.itemId;\r\n  const assignId = trial.assignId;\r\n  let revision = null;\r\n  \r\n  if (assignId && itemId) {\r\n    let annot = annotations[assignId];\r\n    if (annot && itemId in annot.results) {\r\n      revision = annot.results[itemId];\r\n    }\r\n  }\r\n\r\n  if(revision === null){\r\n    revision = makeNewSenseRevision(trial);\r\n  }\r\n  \r\n  return revision;\r\n}\r\n\r\nexport function makeNewSenseRevision(trial: Trial): SenseRevision {\r\n  const revision = {\r\n    annotator: trial.userEmail,\r\n    timestamp: Date.now(),\r\n    assignId: trial.assignId,\r\n    itemId: trial.itemId,\r\n    candidates: [],\r\n    probs: []\r\n  };\r\n\r\n  return revision;\r\n}\r\n\r\nexport function cloneSenseRevision(\r\n  revision: SenseRevision,\r\n  candidates?: string[], probs?: number[]): SenseRevision {\r\n  let newRevision = Object.assign({}, revision);\r\n  newRevision.timestamp = Date.now();\r\n  if (candidates) {\r\n    newRevision.candidates = candidates;\r\n  }\r\n  if (probs) {\r\n    newRevision.probs = probs;\r\n  } else {\r\n    newRevision.probs = newRevision.candidates\r\n      .map((x) => 1 / (newRevision.candidates.length));\r\n  }\r\n  \r\n  return newRevision;\r\n};\r\n\r\n\r\nexport function makeNewSenseTree(trial: Trial): SenseTree {\r\n  let senseTree = {\r\n    annotator: trial.userEmail,\r\n    annotatorId: trial.userId,\r\n    timestamp: Date.now(),\r\n    lemma: trial.token[0],\r\n    root: makeSenseTreeGroupNode(`「${trial.token[0]}」的詞意`)\r\n  } as SenseTree;\r\n\r\n  return senseTree;\r\n}\r\n\r\nfunction findSense(cwn_id: string, senses: CwnSense[]) {\r\n  let index = senses.map((x) => x.cwn_id).indexOf(cwn_id);\r\n\r\n  if (index < 0) {\r\n    return null;\r\n  } else {\r\n    return senses[index];\r\n  }\r\n}\r\n\r\nexport function parseFilter(filter: string, senses: CwnSense[], senseTree: SenseTree | null) {\r\n\r\n  const tokens = filter.split(\">>\");\r\n  const filterStr = tokens[0];\r\n\r\n  let serial = -1;\r\n  if (tokens.length > 1) {\r\n    serial = parseInt(tokens[1]) ? parseInt(tokens[1]) : -1;\r\n  }\r\n\r\n  let senseInGroups: CwnSense[] = [];\r\n  if (senseTree) {\r\n    //debugger;\r\n    let groups = findNodes(senseTree.root,\r\n      (x) => x.node_type == \"group\" &&\r\n        ((x.title.indexOf(filterStr) >= 0) || x.tag?.indexOf(filterStr) >= 0));\r\n    senseInGroups = groups.map((x) => getLeaves(x))\r\n      .flatMap((leafs) => leafs\r\n        .filter((leaf) => leaf.node.node_type == \"sense\")\r\n        .map((leaf) => findSense(leaf.node.node_id, senses)))\r\n      .filter((x) => x !== null) as CwnSense[];\r\n  }\r\n\r\n  console.log(\"senseInGroups\", senseInGroups);\r\n  if (senseInGroups.length > 0) {\r\n    return serial >= 0 ? [senseInGroups[serial]] : senseInGroups;\r\n  } else {    \r\n    const filteredSenses = senses.filter((x) => {\r\n      return x.cwn_id.startsWith(filterStr) || x.pos.startsWith(filterStr)\r\n    });    \r\n    console.log(\"filteredSenses\", filteredSenses);\r\n    return filteredSenses;\r\n  }\r\n}\r\n\r\n","import { User, PretaggedToken, SenseRevision, CwnSense, SenseTree, Trial, Annotations } from \"../datatypes\";\r\nimport { fetchAnnotations, fetchSenses } from \"../DataHandler\";\r\nimport { fetchSenseTree } from \"../DataHandler/getData\";\r\nimport { makeNewSenseTree } from \"./sorter_utils\";\r\n\r\ntype StateSetter<T> = React.Dispatch<React.SetStateAction<T>>\r\n\r\nexport async function updateSenses(\r\n  trial: Trial,\r\n  senseSetter: StateSetter<CwnSense[]>)\r\n  : Promise<CwnSense[]> {\r\n\r\n  let token = trial.token;\r\n  let senses = [] as CwnSense[];\r\n  if (token) {\r\n    let lemma = token[0];\r\n    try {\r\n      senses = await fetchSenses(lemma);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n  senseSetter(senses);\r\n  return senses;\r\n}\r\n\r\nexport async function initSenseTree(\r\n  trial: Trial) {\r\n\r\n\r\n  let senseTree: SenseTree | null = null;\r\n  if (trial && trial.token) {\r\n    const userEmail = trial.userEmail;\r\n    const token = trial.token;\r\n    const lemma = token[0];\r\n\r\n    try {\r\n      senseTree = await fetchSenseTree(userEmail, lemma);\r\n    } catch (err) {\r\n      // console.error(err);\r\n    }\r\n\r\n    if (senseTree === null) {\r\n      senseTree = makeNewSenseTree(trial);\r\n    }\r\n  }\r\n  return senseTree;\r\n}\r\n\r\n","import React, { useRef } from 'react';\r\nimport { TooltipHost, TooltipDelay, DirectionalHint, Persona, PersonaInitialsColor, PersonaSize } from '@fluentui/react';\r\nimport { CwnSense } from '../datatypes';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nexport interface ISenseItemData {\r\n  sense: CwnSense;\r\n  index: number;  \r\n  onDragAndDrop: (srcSenseId: string, tgtSenseId: string)=>void;\r\n  onClick: ()=>void;\r\n}\r\n\r\nexport interface SenseDragItem {\r\n  type: \"leaf-node\",\r\n  senseId: string;\r\n}\r\n\r\nfunction examplesTooltips(examples: string[]) {\r\n  return {\r\n    onRenderContent: () => {\r\n      return (<ul>\r\n        {examples.map((x) => (\r\n          <li key={x.substr(0, 5)+x.length.toString()}>{x}</li>))}\r\n      </ul>)\r\n    }\r\n  }\r\n}\r\n\r\nexport function SenseItem(props: ISenseItemData) {\r\n  const { sense, index } = props;\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const [{}, drag] = useDrag({\r\n    item: { type: \"leaf-node\", senseId: sense.cwn_id },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [{}, drop] = useDrop({\r\n    accept: \"leaf-node\",\r\n    drop: (item: SenseDragItem, monitor) => {\r\n      // console.log(item, monitor);\r\n      props.onDragAndDrop(item.senseId, sense.cwn_id);\r\n    },\r\n\r\n    canDrop: (item, monitor) => {\r\n      return true;\r\n    },\r\n  });\r\n\r\n  drag(drop(ref));\r\n  if (sense && index !== undefined) {\r\n    return (\r\n      <div ref={ref}>\r\n        <TooltipHost\r\n          tooltipProps={examplesTooltips(sense.examples)}\r\n          id={\"tp\" + sense.cwn_id}\r\n          delay={TooltipDelay.long}\r\n          directionalHint={DirectionalHint.rightCenter}\r\n        >\r\n          <Persona\r\n            key={`sense-item-${sense.cwn_id}`}\r\n            imageInitials={sense.pos}\r\n            initialsColor={(index % 6) as PersonaInitialsColor}\r\n            text={sense.definition}\r\n            secondaryText={sense.examples[0]}\r\n            size={PersonaSize.size32}            \r\n            showSecondaryText={true}\r\n            onClick={props.onClick}            \r\n            styles={{\r\n              root: { marginTop: \"7px\", userSelect: \"none\" },\r\n              primaryText: { fontSize: \"11pt\", userSelect: \"none\" },\r\n              secondaryText: { fontSize: \"8pt\", color: \"gray\", userSelect: \"none\" }\r\n            }}\r\n          />\r\n        </TooltipHost>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (<div></div>)\r\n  }\r\n\r\n}\r\nexport default SenseItem;","import React, { useState } from 'react';\r\nimport { CwnSense, SenseTree, SenseTreePath, SenseRevision } from '../datatypes';\r\nimport { Selection, SelectionMode, List, Persona, PersonaSize, PersonaInitialsColor, TooltipHost, DirectionalHint, TooltipDelay, IGroup, GroupedList, Breadcrumb, Stack, TextField } from '@fluentui/react';\r\nimport { GroupedSenses, findNode, moveNode, findNodes } from './tree_utils';\r\nimport SenseItem from './SenseItem';\r\nimport { cloneSenseRevision } from './sorter_utils';\r\n\r\nexport interface ISenseListProps {\r\n  senseTree: SenseTree | null;\r\n  groupedSenses: GroupedSenses;\r\n  senseRevision: SenseRevision;\r\n  onSenseTreeUpdated: (tree: SenseTree) => void;\r\n  onSenseRevisionUpdated: (revision: SenseRevision) => void;\r\n}\r\n\r\nlet selectionModel = new Selection({\r\n  onSelectionChanged: () => {\r\n    console.log(selectionModel.getSelection());\r\n  }\r\n});\r\n\r\n\r\nexport function SenseList(props: ISenseListProps) {\r\n  let senses: CwnSense[] = [];\r\n  let groups: IGroup[] = [];\r\n  const [senseFilter, setSenseFilter] = useState<string | null>(null);\r\n\r\n  if (Object.keys(props.groupedSenses).length > 0) {\r\n    senses = props.groupedSenses.senses;\r\n    groups = props.groupedSenses.groups;\r\n  }\r\n\r\n  function onSenseDragAndDrop(srcSenseId: string, tgtSenseId: string) {\r\n    const senseTree = props.senseTree;\r\n    if (senseTree) {\r\n      const srcNode = findNode(senseTree.root, (x) => x.node_id == srcSenseId);\r\n      const tgtNode = findNode(senseTree.root, (x) => x.node_id == tgtSenseId);\r\n\r\n      if (srcNode && tgtNode) {\r\n        const newRoot = moveNode(senseTree.root, srcNode, tgtNode);\r\n        const newTree = Object.assign({}, senseTree);\r\n        newTree.timestamp = Date.now();\r\n        newTree.root = newRoot;\r\n        props.onSenseTreeUpdated(newTree);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const onSenseSelected = (sense: CwnSense) => {\r\n    const senseRevision = props.senseRevision;\r\n\r\n    // console.log(\"onSenseSelected (senseRevision): \", senseRevision);\r\n    let candidates = senseRevision.candidates;\r\n    if (senseRevision.candidates.indexOf(sense.cwn_id) < 0) {\r\n      candidates.push(sense.cwn_id);\r\n      const newRevision = cloneSenseRevision(senseRevision,\r\n        candidates = candidates);\r\n      newRevision.status = \"NORMAL\";\r\n      props.onSenseRevisionUpdated(newRevision);\r\n    }\r\n  }\r\n\r\n  function renderCell(nestingDepth?: number,\r\n    sense?: CwnSense, index?: number) {\r\n\r\n    if (sense && index !== undefined) {\r\n\r\n\r\n      return (\r\n        <SenseItem\r\n          sense={sense} index={index}\r\n          onDragAndDrop={onSenseDragAndDrop}\r\n          onClick={() => onSenseSelected(sense)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Stack>\r\n      <div\r\n        id=\"unique-sense-list-id\"\r\n        ref={null/*drop*/}\r\n        style={{\r\n          height: \"500px\",\r\n          overflowX: \"hidden\", overflowY: \"scroll\"\r\n        }}>\r\n        <GroupedList\r\n          items={senses}\r\n          groups={groups}\r\n          onRenderCell={renderCell}\r\n          compact={true}\r\n          selectionMode={SelectionMode.none}\r\n          groupProps={\r\n            { showEmptyGroups: true }\r\n          }\r\n        />\r\n      </div>\r\n    </Stack>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { FocusTrapCallout, Stack, Label, TextField, mergeStyleSets, Button, PrimaryButton } from \"@fluentui/react\";\r\n\r\nexport interface IGroupInfo {\r\n  title: string;\r\n  tag: string;\r\n}\r\n\r\nexport interface IGroupInfoEditProps {\r\n  elemId: string;\r\n  groupInfo: IGroupInfo;\r\n  onGroupInfoUpdate: (info: IGroupInfo) => void;\r\n  onDismiss: () => void;\r\n}\r\n\r\nexport function GroupInfoEdit(props: IGroupInfoEditProps) {\r\n  const [groupInfo, setGroupInfo] = useState(props.groupInfo);\r\n\r\n  const styles = mergeStyleSets({\r\n    root: { padding: \"5%\" },\r\n    label: { width: \"60px\", margin: \"1% 0%\" },\r\n    textInput: {}\r\n  })\r\n\r\n  const onSave = () => {\r\n    setGroupInfo(groupInfo);\r\n    props.onGroupInfoUpdate(groupInfo);\r\n    props.onDismiss();\r\n  }\r\n\r\n  return (\r\n    <FocusTrapCallout\r\n      role=\"alertdialog\"\r\n      gapSpace={0}\r\n      target={`#${props.elemId}`}\r\n      onDismiss={props.onDismiss}\r\n      setInitialFocus\r\n    >\r\n      <Stack className={styles.root}>\r\n        <Stack horizontal>\r\n          <Label className={styles.label}>Title</Label>\r\n          <TextField className={styles.textInput}\r\n            onChange={(ev, newvalue) => setGroupInfo({ ...groupInfo, title: newvalue ? newvalue : \"\" })}\r\n            defaultValue={groupInfo.title}></TextField>\r\n        </Stack>\r\n        <Stack horizontal>\r\n          <Label className={styles.label}>Tag</Label>\r\n          <TextField className={styles.textInput}\r\n            onChange={(ev, newvalue) => setGroupInfo({ ...groupInfo, tag: newvalue ? newvalue : \"\" })}\r\n            defaultValue={groupInfo.tag}></TextField>\r\n        </Stack>\r\n        <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: \"10px\" }}\r\n          styles={{ root: { paddingTop: \"16px\" } }}>\r\n          <Button onClick={props.onDismiss}>Cancel</Button>\r\n          <PrimaryButton onClick={onSave}>Save</PrimaryButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n    </FocusTrapCallout>\r\n  )\r\n}\r\n\r\n","import { useDrop, useDrag } from \"react-dnd\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Link, IGroupHeaderProps, IconButton, Stack, IGroup } from \"@fluentui/react\";\r\nimport { SenseDragItem } from \"./SenseItem\";\r\nimport { GroupInfoEdit, IGroupInfo } from \"./GroupInfoEdit\";\r\n\r\ninterface GroupDragItem {\r\n  type: \"group-node\";\r\n  nodeId: string;\r\n}\r\n\r\nexport interface GroupHeaderDndHandler {\r\n  onDragAndDrop: (srcNodeId: string, tgtNodeId: string) => void;\r\n  onGroupHeaderUpdate: (groupInfo: IGroupInfo) => void;\r\n  onDeleteGroup: (group: IGroup) => void;\r\n  deleteState: boolean;\r\n}\r\n\r\nexport function SenseTreeGroupHeader(props: IGroupHeaderProps & GroupHeaderDndHandler) {\r\n  const toggleCollapse = (): void => {\r\n    props.onToggleCollapse!(props.group!);\r\n  };\r\n\r\n  const [editVisibility, setEditVisibility] = useState(false);\r\n  const toggleEditVisibility = () => {\r\n    setEditVisibility(!editVisibility);\r\n  }  \r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [{ isOver, canDrop }, drop] = useDrop({\r\n    accept: [\"group-node\", \"leaf-node\"],\r\n    drop: (item: GroupDragItem | SenseDragItem, monitor) => {\r\n      let groupNodeId = props.group!.key;\r\n      if (item.type == \"group-node\") {\r\n        props.onDragAndDrop(item.nodeId, groupNodeId);\r\n      } else {\r\n        props.onDragAndDrop(item.senseId, groupNodeId);\r\n      }\r\n\r\n    },\r\n    canDrop: (item, monitor) => {\r\n      if (item.type == \"leaf-node\"){\r\n        return true;\r\n      } else {\r\n        return item.nodeId != props.group!.key;\r\n      }\r\n      \r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: \"group-node\", nodeId: props.group!.key },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  if (props.group) {\r\n    drag(drop(ref));\r\n\r\n    const groupInfo = { title: props.group.name, tag: props.group.data.tag }\r\n    const tag = groupInfo.tag;\r\n    let groupButton = null;\r\n    if (props.group.isCollapsed) {\r\n      groupButton = (<IconButton onClick={toggleCollapse} iconProps={{ iconName: \"ChevronDown\" }} title=\"展開\" />)\r\n    } else {\r\n      groupButton = (<IconButton onClick={toggleCollapse} iconProps={{ iconName: \"ChevronRight\" }} title=\"收起\" />)\r\n    }\r\n\r\n    let allCount = props.group.data.allCount;\r\n    let countStr = allCount || allCount === 0 ? `(${props.group.data.allCount})` : \"\";\r\n    let deleteButton = props.deleteState ? (\r\n      <IconButton iconProps={{ iconName: \"Delete\" }}\r\n        onClick={()=>props.onDeleteGroup(props.group!)} />\r\n      ) : null;\r\n\r\n    let editCallout = editVisibility ? (\r\n      <GroupInfoEdit\r\n        elemId={`group-header-${props.group.key}`}\r\n        groupInfo={groupInfo}\r\n        onDismiss={toggleEditVisibility}\r\n        onGroupInfoUpdate={props.onGroupHeaderUpdate}></GroupInfoEdit>) : null;\r\n\r\n    return (\r\n      <div ref={ref} className=\"d-flex p-1 align-items-baseline user-select-none\"\r\n        style={{ marginLeft: props.groupLevel! * 20 }}>\r\n        {editCallout}\r\n        {groupButton}\r\n        <Stack\r\n          id={`group-header-${props.group.key}`}\r\n          horizontal\r\n          verticalAlign=\"baseline\"\r\n          horizontalAlign=\"space-between\"\r\n          onClick={() => props.onGroupHeaderClick!(props.group!)}\r\n          onDoubleClick={() => toggleEditVisibility()}>\r\n          {deleteButton}\r\n          {(tag && tag.length > 0)?\r\n            <h6><span className=\"badge bg-primary\">{tag}</span>&nbsp;</h6>:null }\r\n          <h6>{props.group.name} {countStr}</h6>\r\n        </Stack>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (<div></div>)\r\n  }\r\n}","\r\nimport React from 'react';\r\nimport { Dialog, DialogFooter, PrimaryButton, DefaultButton, DialogType, DefaultPalette } from '@fluentui/react';\r\n\r\nexport interface IResetSenseTreeDialogProps {\r\n  hideDialog: boolean;\r\n  onDismiss: () => void;\r\n  onConfirmReset: () => void;\r\n}\r\n\r\nexport function ResetSenseTreeDialog(props: IResetSenseTreeDialogProps) {\r\n  const dialogContentProps = {\r\n    type: DialogType.normal,\r\n    title: '確認要重新分類嗎',\r\n    closeButtonAriaLabel: 'Close',\r\n    subText: '這會完全移除現有的詞意分類，且無法復原。確認要重新分類嗎？',\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      hidden={props.hideDialog}\r\n      onDismiss={props.onDismiss}\r\n      dialogContentProps={dialogContentProps}\r\n\r\n    >\r\n      <DialogFooter>\r\n        <PrimaryButton onClick={props.onConfirmReset} \r\n          styles={{root: {backgroundColor: DefaultPalette.red}}} text=\"確定\" />\r\n        <DefaultButton onClick={props.onDismiss} text=\"取消\" />\r\n      </DialogFooter>\r\n    </Dialog>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { SenseTree, SenseTreeNode } from '../datatypes';\r\nimport { Depths } from '@uifabric/fluent-theme/lib/fluent/FluentDepths'\r\nimport { GroupedList, SelectionMode, IGroup, IGroupHeaderProps, Stack, IconButton, DefaultPalette } from '@fluentui/react';\r\nimport { toGroup, findNode, moveNode, removeGroupNode, addGroupNode } from './tree_utils';\r\nimport { SenseTreeGroupHeader } from './SenseTreeGroupHeader';\r\nimport { IGroupInfo } from './GroupInfoEdit';\r\nimport { ResetSenseTreeDialog } from './ResetSenseTreeDialog';\r\nimport { makeNewSenseTree } from './sorter_utils';\r\n\r\nexport interface ISenseTreeViewProps {\r\n  senseTree: SenseTree | null;\r\n  onSenseTreeUpdated: (tree: SenseTree | null) => void;\r\n  onSelectedNodeUpdated: (node: SenseTreeNode | null) => void;\r\n}\r\n\r\n\r\n\r\nexport function SenseTreeView(props: ISenseTreeViewProps) {\r\n  let senseTree = props.senseTree;\r\n  const [deleteState, setDeleteState] = useState(false);\r\n  const [resetDialogShown, setResetDialogShown] = useState(false);\r\n\r\n  const onRenderCell = (nestingDepth?: number, item?: SenseTreeNode, itemIndex?: number): JSX.Element => {\r\n    return (<div></div>);\r\n  }\r\n\r\n  const onGroupHeaderDrangAndDrop = (srcNodeId: string, tgtNodeId: string) => {\r\n    const senseTree = props.senseTree;\r\n    if (senseTree) {\r\n      const srcNode = findNode(senseTree.root, (x) => x.node_id == srcNodeId);\r\n      const tgtNode = findNode(senseTree.root, (x) => x.node_id == tgtNodeId);\r\n\r\n      if (srcNode && tgtNode) {\r\n        const newRoot = moveNode(senseTree.root, srcNode, tgtNode);\r\n        const newTree = Object.assign({}, senseTree);\r\n        newTree.timestamp = Date.now();\r\n        newTree.root = newRoot;\r\n        props.onSenseTreeUpdated(newTree);\r\n        console.log(newTree);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onRenderHeader = (headerProps?: IGroupHeaderProps): JSX.Element => {\r\n    const onGroupHeaderUpdate = (groupInfo: IGroupInfo) => {\r\n      let groupId = headerProps?.group?.key;\r\n      if (groupId && senseTree) {\r\n        let newTree = Object.assign({}, senseTree)\r\n        let groupNode = findNode(newTree.root, (x) => x.node_id == groupId);\r\n        if (groupNode) {\r\n          groupNode.title = groupInfo.title;\r\n          groupNode.tag = groupInfo.tag;\r\n\r\n          props.onSenseTreeUpdated(newTree);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (headerProps) {\r\n      let elemProps = {\r\n        ...headerProps,\r\n        onDragAndDrop: onGroupHeaderDrangAndDrop,\r\n        onGroupHeaderUpdate: onGroupHeaderUpdate,\r\n        onDeleteGroup: deleteGroup,\r\n        deleteState: deleteState,\r\n      }\r\n      return (<SenseTreeGroupHeader {...elemProps}\r\n      />)\r\n    } else {\r\n      return (<div></div>)\r\n    }\r\n\r\n  };\r\n\r\n  const onGroupClicked = (group: IGroup) => {\r\n    if (senseTree) {\r\n      const node = findNode(senseTree?.root, (x) => x.node_id == group.key);\r\n      node && props.onSelectedNodeUpdated(node);\r\n    }\r\n  }\r\n\r\n  const addGroup = () => {\r\n    if (senseTree) {\r\n      let newTree = Object.assign({}, senseTree);\r\n      newTree.root = addGroupNode(newTree.root);\r\n      newTree.timestamp = Date.now();\r\n      props.onSenseTreeUpdated(newTree);\r\n    }\r\n  }\r\n\r\n  const deleteGroup = (group: IGroup) => {\r\n    if (senseTree) {\r\n      const node = findNode(senseTree.root, (x) => x.node_id == group.key);\r\n      if (node) {\r\n        let newTree = Object.assign({}, senseTree);\r\n        let newRoot = removeGroupNode(newTree.root, node);\r\n        newTree.timestamp = Date.now();\r\n        props.onSenseTreeUpdated(newTree);\r\n      }\r\n    }\r\n  }\r\n\r\n  const resetSenseTree = () => {\r\n    if(!senseTree) return;\r\n    let newSenseTree = Object.assign({}, senseTree);\r\n    newSenseTree.root = Object.assign({}, senseTree.root);\r\n    newSenseTree.root.title = `「${senseTree.lemma}」的詞意`;\r\n    newSenseTree.root.children = [];    \r\n    props.onSenseTreeUpdated(newSenseTree);\r\n    toggleResetDialog();\r\n  }\r\n\r\n  const toggleDeleteState = () => {\r\n    setDeleteState(!deleteState);\r\n  }\r\n  \r\n  const toggleResetDialog = () => {\r\n    setResetDialogShown(!resetDialogShown);\r\n  }\r\n\r\n  if (senseTree) {\r\n    return (\r\n      <div className=\"p-3\"\r\n        style={{ boxShadow: Depths.depth8 }}>\r\n        {/* treeData={props.senseTree.children as TreeItem[]} */}\r\n        \r\n        <ResetSenseTreeDialog\r\n          hideDialog={!resetDialogShown}\r\n          onConfirmReset={resetSenseTree}\r\n          onDismiss={toggleResetDialog}\r\n        />\r\n        <Stack>\r\n          <Stack.Item>\r\n            <Stack horizontal horizontalAlign=\"end\">\r\n              <IconButton\r\n                iconProps={{ iconName: \"AlbumRemove\" }}\r\n                onClick={toggleResetDialog}\r\n                title=\"重新分類\" />\r\n              <IconButton\r\n                iconProps={{ iconName: \"Add\" }}\r\n                onClick={addGroup}\r\n                title=\"新類別\" />\r\n              <IconButton title=\"刪除\"\r\n                iconProps={{ iconName: \"Delete\" }}\r\n                onClick={toggleDeleteState}\r\n                checked={deleteState}\r\n              />\r\n            </Stack>\r\n          </Stack.Item>\r\n          <Stack.Item>\r\n            <div style={{ height: 468, overflowY: \"auto\" }}>\r\n              <GroupedList\r\n                items={[]}\r\n                groups={[senseTree.root].map(toGroup)}\r\n                onRenderCell={onRenderCell}\r\n                selectionMode={SelectionMode.none}\r\n                groupProps={\r\n                  {\r\n                    onRenderHeader: onRenderHeader,\r\n                    showEmptyGroups: true,\r\n                    headerProps: {\r\n                      onGroupHeaderClick: onGroupClicked\r\n                    }\r\n                  }\r\n                }\r\n                compact={true}\r\n              />\r\n            </div>\r\n          </Stack.Item>\r\n        </Stack>\r\n      </div>\r\n    )\r\n  } else {\r\n    return null;\r\n  }\r\n}","import React from 'react';\r\nimport { CwnSense } from \"../datatypes\";\r\nimport { CompactPeoplePicker, IBasePickerProps, IPersonaProps, PersonaInitialsColor } from \"@fluentui/react\";\r\n\r\nexport interface ISensePickerProps {\r\n  senseCandidates: CwnSense[];  \r\n  onSenseSuggestions: (filter: string) => CwnSense[];\r\n  onPickerChanged: (senseIds: string[]) => void;\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport function SensePicker(props: ISensePickerProps) {\r\n  function onFilterChanged(filter: string) {\r\n    let senses = props.onSenseSuggestions(filter);\r\n    return senses.map((sense, index) => {\r\n      return {\r\n        imageInitials: sense.pos,\r\n        initialsColor: (index % 6) as PersonaInitialsColor,\r\n        text: sense.definition,\r\n        optionalText: sense.cwn_id\r\n      }\r\n    });\r\n  }\r\n\r\n  const onSelectedItemsChange = (items?: IPersonaProps[]) => {\r\n    if (items) {\r\n      props.onPickerChanged(items.map((x) => {\r\n        return x.optionalText?x.optionalText:\"\"\r\n      }));\r\n    }\r\n  }\r\n\r\n  let selectedItems = props.senseCandidates.map((sense) => {\r\n    return {\r\n      imageInitials: sense.pos,\r\n      initialsColor: PersonaInitialsColor[0],\r\n      text: sense.definition,\r\n      optionalText: sense.cwn_id,\r\n      styles: {primaryText: {fontSize: \"8pt\"}}\r\n    }\r\n  });\r\n\r\n  return (\r\n    <CompactPeoplePicker\r\n      selectedItems={selectedItems}\r\n      onResolveSuggestions={onFilterChanged}\r\n      onChange={onSelectedItemsChange}  \r\n      \r\n    />\r\n  )\r\n}","import { IDropdownOption, DropdownMenuItemType } from \"@fluentui/react\";\r\n\r\nexport const annot_exclusion_options: IDropdownOption[] = [\r\n  {key:\"exclHeader\", text:'非標記範圍', itemType: DropdownMenuItemType.Header},  \r\n  {key:\"segError\", text:\"斷詞問題\"},\r\n  {key:\"proper\", text: \"專有名詞\"},\r\n  {key:\"translation\", text:\"翻譯用語\"},\r\n  {key:\"domain\", text: \"特定領域用語\"},\r\n  {key:\"variation\", text: \"其他地區用語\"},\r\n  {key:\"mwe\", text:'鑲嵌於其他多語單位'},\r\n  {key:\"divider_1\", text:'-', itemType: DropdownMenuItemType.Divider},\r\n  {key:\"editHeader\", text:'建議編修辭意', itemType: DropdownMenuItemType.Header},\r\n  {key:\"newExample\", text: \"新增例句\"},\r\n  {key:\"newSense\", text: \"新增詞意\"}\r\n];","import React, { useState, useEffect, useRef } from 'react';\r\nimport { SenseRevision, CwnSense, SenseTree } from '../datatypes';\r\nimport { Stack, IconButton, Announced, Rating, Dropdown, TextField, ITextField, DefaultPalette } from '@fluentui/react';\r\nimport { SensePicker } from './SensePicker';\r\nimport { parseFilter, cloneSenseRevision } from './sorter_utils';\r\nimport { SessionDispatch, SessionActionType } from '../SenseAnnot/sessionUtils/sessionReducer';\r\nimport { annot_exclusion_options } from './sense_sorter_options';\r\n\r\nexport interface IRevisionViewProps {\r\n  revision: SenseRevision | null;\r\n  senses: CwnSense[],\r\n  senseTree: SenseTree | null,\r\n  sessionDispatch: SessionDispatch;\r\n  onSenseRevisionUpdated: (revision: SenseRevision) => void;\r\n}\r\n\r\nfunction getRating(revision: SenseRevision | null) {\r\n  if (revision) {\r\n    return revision.probs.length > 0 ?\r\n      Math.floor(revision.probs[0] / 0.25) : 4;\r\n  } else {\r\n    return 4;\r\n  }\r\n}\r\n\r\nexport function RevisionView(props: IRevisionViewProps) {\r\n  let revision = props.revision;\r\n  let iconStyle = { height: \"30px\", width: \"30px\", fontSize: \"100px\" };\r\n  \r\n  const [isExcluded, setIsExcluded] = useState(props.revision?.status == \"EXCLUDED\");\r\n  const suppTextRef = useRef<ITextField>(null);\r\n\r\n  useEffect(() => {      \r\n    setIsExcluded(props.revision?.status == \"EXCLUDED\");\r\n  }, [props.revision]);\r\n\r\n  if (revision) {\r\n\r\n    const isRevisionComplete = (revision: SenseRevision) => {\r\n      const status = revision.status;\r\n      if (status && status == \"EXCLUDED\") {\r\n        return true;\r\n      } else {\r\n        return revision.probs.length == 1;\r\n      }\r\n    }\r\n\r\n    const onFilterSenses = (filter: string) => {\r\n      return parseFilter(filter, props.senses, props.senseTree);\r\n    }\r\n\r\n    const onRevisionUpdated = (newRevision: SenseRevision) => {\r\n      props.onSenseRevisionUpdated(newRevision);\r\n    }\r\n\r\n    const onSenseCandidatesUpdated = (newCandidates: string[]) => {\r\n      if (revision) {\r\n        const newRevision = cloneSenseRevision(revision, newCandidates);\r\n        newRevision.status = \"NORMAL\";        \r\n        // console.log(\"onRevisionUpdated\", newRevision);\r\n        onRevisionUpdated(newRevision);\r\n      }\r\n    }\r\n\r\n    const onExclusionUpdated = (supp_text: string) => {\r\n      if (revision) {\r\n        const newRevision = cloneSenseRevision(revision);\r\n        newRevision.status = \"EXCLUDED\";\r\n        newRevision.note = supp_text;\r\n        onRevisionUpdated(newRevision);\r\n        // console.log(\"onExclusionUpdated\", newRevision);\r\n      }\r\n    }\r\n\r\n    const toggleIsExcluded = () => {\r\n      if (revision) {\r\n        const newRevision = cloneSenseRevision(revision);\r\n        newRevision.status = newRevision.status == \"EXCLUDED\"? \r\n          \"NORMAL\": \"EXCLUDED\";\r\n        newRevision.note = \"\";\r\n        onRevisionUpdated(newRevision);        \r\n      }\r\n    };\r\n\r\n    const selectedSenses = revision.candidates.map((x) => {\r\n      let targets = props.senses.filter((sense) => sense.cwn_id == x);\r\n      return (targets && targets.length > 0) ? targets[0] : null;\r\n    }).filter((x) => x !== null) as CwnSense[];\r\n\r\n    const [exclOptionKey, exclSuppText] = revision.note ?\r\n      revision.note.split(\";\") : [undefined, \"\"];\r\n\r\n    const exclusionElem = (\r\n      <Stack horizontal styles={{ root: { width: \"100%\" } }}>\r\n        <Stack.Item grow={1}>\r\n          <Dropdown placeholder=\"(原因)\" label=\"排除原因\"\r\n            selectedKey={exclOptionKey}\r\n            options={annot_exclusion_options}\r\n            onChange={(ev, item) => {\r\n              const itemKey = item ? item.key : \"\";\r\n              onExclusionUpdated(`${itemKey};${exclSuppText}`)\r\n            }} />\r\n        </Stack.Item>\r\n        <Stack.Item grow={2}>\r\n          <TextField label=\"其他紀錄\" componentRef={suppTextRef}\r\n            defaultValue={exclSuppText}\r\n            onBlur={(ev) => {\r\n              const suppText = suppTextRef.current ? suppTextRef.current.value : \"\";\r\n              onExclusionUpdated(`${exclOptionKey};${suppText}`)\r\n              console.log(\"suppText onBlur\");\r\n            }}\r\n          />\r\n        </Stack.Item>\r\n      </Stack>);\r\n\r\n    const pickerElem = (<SensePicker\r\n      senseCandidates={selectedSenses}\r\n      onPickerChanged={onSenseCandidatesUpdated}\r\n      onSenseSuggestions={onFilterSenses}\r\n      onSubmit={() => { props.sessionDispatch(SessionActionType.NextTodo); }}\r\n    />);\r\n\r\n    return (\r\n      <Stack horizontal verticalAlign=\"end\"\r\n        styles={{ root: { width: \"100%;\", paddingBottom: \"1%\" } }}>\r\n        <Stack.Item grow={1}>\r\n          {isExcluded ? exclusionElem : pickerElem}\r\n        </Stack.Item>\r\n        <Stack.Item styles={{ root: { width: \"100px\" } }}>\r\n          <Stack tokens={{ childrenGap: 2 }} horizontal\r\n            horizontalAlign=\"end\" verticalAlign=\"end\">\r\n            <IconButton style={iconStyle}\r\n              iconProps={{ iconName: 'CheckMark' }}\r\n              title=\"確認\" ariaLabel=\"CheckMark\"\r\n              disabled={!isRevisionComplete(revision)}\r\n              onClick={() => { props.sessionDispatch(SessionActionType.NextTodo); }}\r\n            />\r\n            <IconButton style={iconStyle}\r\n              iconProps={{ iconName: 'Communications' }}              \r\n              title=\"需要討論\" ariaLabel=\"Communications\"\r\n              styles={{root: {color: isExcluded? \"red\": DefaultPalette.themePrimary}}}\r\n              onClick={toggleIsExcluded} />\r\n          </Stack>\r\n        </Stack.Item>\r\n      </Stack>\r\n    )\r\n  } else {\r\n    return null;\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { CwnSense, SenseTree, Annotations, SenseRevision, Trial, SenseTreeNode } from '../datatypes';\r\nimport { updateSenses, initSenseTree } from './sorter_updater';\r\nimport { SenseList } from './SenseList';\r\nimport { SenseTreeView } from './SenseTreeView';\r\nimport { RevisionView } from './RevisionView';\r\nimport { getGroupedSenses, GroupedSenses, checkSenseTree } from './tree_utils';\r\nimport { makeNewSenseRevision, getSenseRevision, cloneSenseRevision } from './sorter_utils';\r\nimport { uploadSenseTree } from './sorter_uploader';\r\nimport { SessionDispatch } from '../SenseAnnot/sessionUtils/sessionReducer';\r\n\r\n\r\nexport interface ISenseSorterData {\r\n  trial: Trial;\r\n  annotations: Annotations;\r\n  sessionDispatch: SessionDispatch;\r\n  onSenseRevisionUpdated: (trial: Trial, senseRevision: SenseRevision) => void;\r\n}\r\n\r\n\r\n\r\nfunction SenseSorter(props: ISenseSorterData) {\r\n  // let senseData = props.senseData;  \r\n  const __senseRevision = getSenseRevision(props.trial, props.annotations);  \r\n\r\n  const [senses, setSenses] = useState([] as CwnSense[]);\r\n  const [senseTree, setSenseTree] = useState<SenseTree | null>(null);\r\n  const [selectedNode, setSelectedNode] = useState<SenseTreeNode | null>(null);\r\n  const [selectedGroups, setSelectedGroups] = useState<GroupedSenses>({} as GroupedSenses);\r\n  const [senseRevision, setSenseRevision] = useState(__senseRevision);    \r\n\r\n  useEffect(() => {    \r\n    const sensePromise = updateSenses(props.trial, setSenses);\r\n    const senseTreePromise = sensePromise\r\n      .then((senses: CwnSense[]) => {\r\n        return initSenseTree(props.trial)\r\n      });\r\n    Promise.all([sensePromise, senseTreePromise])\r\n      .then(([senses, senseTree]) => {\r\n        onSenseTreeUpdated(senseTree, senses);\r\n      }).catch((err) => {\r\n        console.error(err)\r\n      });\r\n  }, [props.trial]);\r\n\r\n  // sync groupedSenses with `selectedNode` and `senseTree`\r\n  useEffect(() => {\r\n    let groupedSenses = null;\r\n    if (selectedNode) {\r\n      groupedSenses = getGroupedSenses(selectedNode, senses);\r\n    } else {\r\n      if (senseTree) {\r\n        groupedSenses = getGroupedSenses(senseTree.root, senses);\r\n      } else {\r\n        groupedSenses = { senses: [], groups: [] } as GroupedSenses;\r\n      }\r\n    }    \r\n    setSelectedGroups(groupedSenses);\r\n  }, [selectedNode, senseTree, senseRevision]);\r\n\r\n  useEffect(()=>{    \r\n    const __senseRevision = getSenseRevision(props.trial, props.annotations);\r\n    setSenseRevision(__senseRevision);    \r\n  }, [props.trial, props.annotations])\r\n\r\n  function onSenseTreeUpdated(newTree: SenseTree | null, senses: CwnSense[]) {\r\n    if (newTree) {\r\n      newTree = checkSenseTree(newTree, senses);\r\n      uploadSenseTree(props.trial, newTree);\r\n    }\r\n    setSenseTree(newTree);\r\n  }\r\n\r\n  const onSelectedGroupUpdated = (node: SenseTreeNode | null) => {\r\n    setSelectedNode(node);\r\n  }\r\n\r\n  const onSenseRevisionUpdated = (newRevision: SenseRevision) => {\r\n    props.onSenseRevisionUpdated(props.trial, newRevision);    \r\n  }\r\n\r\n  let borderStyle = { border: \"2px solid black\" };  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <RevisionView\r\n          key={\"rev-\" + senseRevision.itemId}\r\n          revision={senseRevision}\r\n          senses={senses}\r\n          senseTree={senseTree}\r\n          sessionDispatch={props.sessionDispatch}\r\n          onSenseRevisionUpdated={onSenseRevisionUpdated} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <SenseTreeView\r\n            senseTree={senseTree}\r\n            onSelectedNodeUpdated={onSelectedGroupUpdated}\r\n            onSenseTreeUpdated={(senseTree) => onSenseTreeUpdated(senseTree, senses)}\r\n          />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <SenseList            \r\n            senseTree={senseTree}\r\n            senseRevision={senseRevision}\r\n            groupedSenses={selectedGroups}\r\n            onSenseTreeUpdated={(senseTree) => onSenseTreeUpdated(senseTree, senses)}\r\n            onSenseRevisionUpdated={onSenseRevisionUpdated}\r\n            />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n}\r\n// key={`sense-list-${senseRevision.timestamp}`}\r\nexport default SenseSorter;\r\n","import { Trial, SenseTree } from \"../datatypes\";\r\nimport firebase from \"firebase\";\r\n\r\nexport function uploadSenseTree(trial: Trial, senseTree: SenseTree){\r\n  let db = firebase.firestore();\r\n  let userId = trial.userId;\r\n  let userEmail = trial.userEmail;\r\n  let treeId = `${userEmail}-${senseTree.lemma}`;\r\n  let result = db.collection(\"senseTrees\").doc(treeId).set(senseTree);\r\n  return result;\r\n}","import { SenseAnnotSession, User, Assignments, Trial, Annotations, SenseRevision, Annotation } from \"../datatypes\";\r\nimport { fetchSenses, fetchSession, fetchAnnotations } from '../DataHandler';\r\nimport { fetchAssignments, fetchSentence } from '../DataHandler';\r\nimport { SessionActionType, SessionActionPayload, SessionDispatch } from \"./sessionUtils/sessionReducer\";\r\n\r\ntype StateSetter<T> = React.Dispatch<React.SetStateAction<T>>\r\nexport async function updateSession(\r\n  user: User | null,\r\n  session_dispatcher: SessionDispatch) {\r\n\r\n  let new_session: SenseAnnotSession | null = null;\r\n\r\n  if (user !== null) {\r\n    try {\r\n      new_session = await fetchSession(user);\r\n    } catch (err) {\r\n      console.error(\"Error in updateSession\", err);\r\n    }\r\n    if (new_session === null) {\r\n      new_session = {\r\n        userId: user.uid,\r\n        userEmail: user.email,\r\n        lastActivity: Date.now(),\r\n        currentAssignmentId: \"\",\r\n        currentItemId: \"\",\r\n        currentItemNo: NaN\r\n      };\r\n    }\r\n  } else {\r\n    new_session = null;\r\n  }\r\n\r\n  session_dispatcher(\r\n    SessionActionType.Update,\r\n    { newSession: new_session });\r\n}\r\n\r\nexport async function updateAssignments(\r\n  user: User | null,\r\n  assignments_setter: StateSetter<Assignments>) {\r\n\r\n  let assignments: Assignments = [];\r\n  if (user !== null) {\r\n    try {\r\n      assignments = await fetchAssignments(user);\r\n    } catch (err) {\r\n      console.error(err);\r\n      assignments = [];\r\n    }\r\n  } else {\r\n    assignments = [];\r\n  }\r\n\r\n  assignments_setter(assignments);\r\n}\r\n\r\n\r\nexport async function updateAnnotations(\r\n  user: User | null,\r\n  annotations_setter: StateSetter<Annotations>) {\r\n\r\n  let annotations = {} as Annotations;\r\n  if (user !== null) {\r\n    try {\r\n      annotations = await fetchAnnotations(user);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  } else {\r\n    // pass\r\n  }\r\n\r\n  annotations_setter(annotations);\r\n}\r\n\r\nexport async function updateTrial(\r\n  session: SenseAnnotSession | null,\r\n  trial_setter: StateSetter<Trial>) {\r\n\r\n  let trial: Trial = {} as Trial;\r\n\r\n  if (session && session.currentItemId.length > 0) {\r\n    let itemId = session.currentItemId;\r\n    let assignId = session.currentAssignmentId;\r\n\r\n    let sentenceId = itemId.split(\":\")[0];\r\n    let tokenId = parseInt(itemId.split(\":\")[1]);\r\n    let sentence = await fetchSentence(sentenceId);\r\n\r\n    const preContextId = getPreContext(sentenceId);\r\n    const postContextId = getPostContext(sentenceId);    \r\n    let preContext = preContextId? await fetchSentence(preContextId): [];\r\n    let postContext = postContextId? await fetchSentence(postContextId): [];\r\n\r\n    try {\r\n      trial = {\r\n        sentenceId: sentenceId,\r\n        sentence: sentence,\r\n        preContext: preContext,\r\n        postContext: postContext,\r\n        token: sentence[tokenId],\r\n        userEmail: session.userEmail,\r\n        userId: session.userId,\r\n        assignId: assignId,\r\n        itemId: itemId\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  } else {\r\n    // pass\r\n  }\r\n\r\n  trial_setter(trial);\r\n}\r\n\r\nexport function makeNewAnnotation(\r\n  assignId: string, session: SenseAnnotSession) {\r\n\r\n  let userEmail = session.userEmail;\r\n  let annot = {\r\n    annotId: `${userEmail}:${assignId}`,\r\n    annotatorId: session.userId,\r\n    assignId: assignId,\r\n    results: {} as { [key: string]: SenseRevision }\r\n  } as Annotation;\r\n  return annot;\r\n}\r\n\r\nfunction getPreContext(sentenceId: string) {\r\n  return getContext(sentenceId, \"pre\");\r\n}\r\n\r\nfunction getPostContext(sentenceId: string) {\r\n  return getContext(sentenceId, \"post\");\r\n}\r\n\r\nfunction getContext(sentenceId: string, direction: \"pre\" | \"post\") {\r\n  const [batchId, sentenceNoStr] = sentenceId.split(\"-\");\r\n  if (!batchId || !sentenceNoStr) return null;\r\n\r\n  const sentenceNo = parseInt(sentenceNoStr);\r\n  if (isNaN(sentenceNo)) return null;\r\n\r\n  if (direction == \"post\") {\r\n    return `${batchId}-${sentenceNo + 1}`\r\n  } else {\r\n    return `${batchId}-${sentenceNo - 1}`\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Controller from '../Controller/Controller';\r\nimport SentenceViewer from '../SentenceViewer/SentenceViewer';\r\nimport SenseSorter from '../SenseSorter/SenseSorter';\r\nimport { Assignments, Trial, Annotations, SenseRevision, Annotation } from \"../datatypes\";\r\nimport { User, SenseAnnotSession } from \"../datatypes\";\r\nimport { updateSession, updateAssignments, updateTrial, updateAnnotations, makeNewAnnotation } from \"./annot_updater\";\r\nimport { login, logout, subscribeLoginStatus } from '../DataHandler';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/analytics\";\r\nimport { uploadAnnotation } from './annot_uploader';\r\nimport { useSession } from './sessionUtils';\r\nimport { SessionActionType, SessionActionPayload } from './sessionUtils/sessionReducer';\r\nimport \"./version-block.css\"\r\n\r\nfunction initializeFirebase() {\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCtaBIZ-IiQ0a5Z0LsuEnVGmojJbY9yvMs\",\r\n    authDomain: \"langon-281613.firebaseapp.com\",\r\n    databaseURL: \"https://langon-281613.firebaseio.com\",\r\n    projectId: \"langon-281613\",\r\n    storageBucket: \"langon-281613.appspot.com\",\r\n    messagingSenderId: \"98385288306\",\r\n    appId: \"1:98385288306:web:09cdd581f06c0e3cdb76eb\",\r\n    measurementId: \"G-36C7NTBFN0\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n}\r\n\r\nfunction SenseAnnot() {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [annotations, setAnnotations] = useState({} as Annotations);\r\n  const [assignments, setAssignments] = useState<Assignments>([]);\r\n  const [session, sessionDispatch] = useSession(assignments, annotations);\r\n  const [trial, setTrial] = useState<Trial>({} as Trial);\r\n\r\n  console.log(\"rendering SenseAnnot\");\r\n  \r\n  // initialization\r\n  useEffect(() => {\r\n    initializeFirebase();\r\n    subscribeLoginStatus(\r\n      (user) => setUser(user),\r\n      () => setUser(null));\r\n  }, []);\r\n\r\n  // update session, depends on user\r\n  useEffect(() => { updateSession(user, sessionDispatch) }, [user]);\r\n  // update Assignments, depends on user\r\n  useEffect(() => { updateAssignments(user, setAssignments) }, [user])\r\n  // update annotations, depends on user\r\n  useEffect(() => { updateAnnotations(user, setAnnotations) }, [user]);\r\n  // update trial, depends on session\r\n  useEffect(() => { updateTrial(session, setTrial) }, [session, assignments]);\r\n\r\n  // set session to default value\r\n  useEffect(() => {\r\n    if (session && session.currentAssignmentId.length == 0) {      \r\n      sessionDispatch(SessionActionType.Init);\r\n    }\r\n  }, [assignments]);\r\n\r\n  let currentItemId = session ? session.currentItemId : \"\";\r\n\r\n  let controllerStyle = {\r\n    background: \"radial-gradient(circle at bottom left, rgba(0,0,0,1) 0%, rgba(75,75,75,1) 100%)\",\r\n    borderRight: \"2px dashed darkblue\",\r\n    color: \"white\",\r\n    paddingBottom: \"16pt\"\r\n  }\r\n\r\n  /*\r\n   *   Event callback\r\n   */\r\n  const updateSenseRevision = (\r\n    session: SenseAnnotSession | null,\r\n    trial: Trial,\r\n    revision: SenseRevision | null = null) => {\r\n\r\n    if (session && revision) {\r\n      const assignId = trial.assignId;\r\n      const itemId = trial.itemId;\r\n      let newAnnotations = Object.assign({}, annotations);\r\n      let annot = newAnnotations[assignId];\r\n\r\n      if (annot) {\r\n        annot.results[itemId] = revision;\r\n      } else {\r\n        annot = makeNewAnnotation(assignId, session);\r\n        annot.results[itemId] = revision;\r\n        newAnnotations[assignId] = annot;\r\n      }\r\n      \r\n      setAnnotations(newAnnotations);      \r\n      onAnnotationUpdated(annot);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   *    Database update callback\r\n   */\r\n  const onAnnotationUpdated = (newAnnotation: Annotation) => {\r\n    uploadAnnotation(newAnnotation);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container position-relative\">\r\n      <div className=\"version-block\">0.4.0</div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 col-sm-6 d-none d-sm-block\" style={controllerStyle}>\r\n          <Controller\r\n            user={user}\r\n            session={session}\r\n            assignments={assignments}\r\n            annotations={annotations}\r\n            sessionDispatch={sessionDispatch}\r\n            login_fn={login}\r\n            logout_fn={logout}></Controller>\r\n        </div>\r\n        <div className=\"col-md-9 col-sm-6 col-xs-12\">\r\n          <SentenceViewer\r\n            itemId={currentItemId}\r\n            sentence={trial.sentence}\r\n            preContext={trial.preContext}\r\n            postContext={trial.postContext}></SentenceViewer>\r\n          <SenseSorter trial={trial}\r\n            annotations={annotations}\r\n            sessionDispatch={sessionDispatch}\r\n            onSenseRevisionUpdated={(trial, revision) =>\r\n              updateSenseRevision(session, trial, revision)}></SenseSorter>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SenseAnnot;\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport SenseAnnot from './SenseAnnot/SenseAnnot'\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { initializeIcons } from '@uifabric/icons';\nimport './App.css';\n\ninitializeIcons();\n\nfunction App() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <SenseAnnot />\n    </DndProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}